

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (3 June 2023 18:08:14) as /home/sponja/Temp/Cuises/cursada3/CuisUniversity-5832.image!


----End fileIn of /home/sponja/Temp/Cuises/cursada3/MarsRover-WithHeading.st----!

TestCase subclass: #LoggingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggingTest category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 18:11:47'!
TestCase subclass: #LoggingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggingTest methodsFor: 'no messages' stamp: 'TS 6/3/2023 18:12:35'!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	| marsRover |
	marsRover := nil! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:12:55' prior: 50624866!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	| marsRover |
	marsRover := MarsRover at: 1@1 heading: self north.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:13:10' prior: 50624872!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:13:50' prior: 50624879!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'f'.
	
	self assert: 1@2 equals: marsRover log first! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:13:51'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:13:57'!
log
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:14:13' prior: 50624900!
log

	^ #(1@2)! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:14:16'!
FAILURE!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:14:35' prior: 50624904!
log

	^ #( 1@2 )! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:14:49' prior: 50624911!
log

	^ { 1@2 }! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:14:51'!
PASSED!
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:15:34'!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'f'.
	
	self assert: 1@2 equals: marsRover log first! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:15:38' prior: 50624922!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:15:42' prior: 50624932!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@2 equals: marsRover log first! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:15:46' prior: 50624942!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second! !

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:15:47'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 18:16:19'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 18:16:16' prior: 50624617!
moveForward
	
	head moveForward.
	
	log add: position! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:16:27' prior: 50624915!
log

	^ log! !
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/3/2023 18:16:37' prior: 50624557!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log := OrderedCollection new! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 18:16:40'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:16:42'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:16:42'!
PASSED!
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:16:55'!
test02LogOfMarsRoverThatMovedBackwardContainsNewPostiion

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:16:57'!
test02LogOfMarsRoverThatMovedBackwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second! !

!methodRemoval: LoggingTest #test02LogOfMarsRoverThatMovedBackwardContainsNewPostiion stamp: 'TS 6/3/2023 18:17:10'!
test02LogOfMarsRoverThatMovedBackwardContainsNewPostiion

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second!
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:17:16'!
test03LogOfMarsRoverThatMovedBackwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second! !

!methodRemoval: LoggingTest #test02LogOfMarsRoverThatMovedBackwardContainsNewPosition stamp: 'TS 6/3/2023 18:17:16'!
test02LogOfMarsRoverThatMovedBackwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second!
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:17:47'!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second.
	self assert: 1@2 equals: marsRover log third.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:17:50' prior: 50625112!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second.
	self assert: 1@2 equals: marsRover log third! !

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:17:51'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 18:18:06' prior: 50624609!
moveBackward
	
	head moveBackward.
	
	log add: position! !

!methodRemoval: LoggingTest #test03LogOfMarsRoverThatMovedBackwardContainsNewPosition stamp: 'TS 6/3/2023 18:18:18'!
test03LogOfMarsRoverThatMovedBackwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:18:20'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:18:20'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:18:20'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:18:20'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 18:18:47'!
updateLog

	^ log add: position! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 18:18:47' prior: 50624977!
moveForward
	
	head moveForward.
	
	self updateLog! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 18:18:47' prior: 50625141!
moveBackward
	
	head moveBackward.
	
	self updateLog! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:18:49'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:18:49'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:18:49'!
PASSED!

!classRenamed: #MarsRoverTest as: #MovementTest stamp: 'TS 6/3/2023 18:20:37'!
Smalltalk renameClassNamed: #MarsRoverTest as: #MovementTest!

!classDefinition: #MarsRoverTest category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 18:20:43'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MovementTest category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 18:20:43'!
MarsRoverTest subclass: #MovementTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverTest subclass: #LoggingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggingTest category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 18:20:50'!
MarsRoverTest subclass: #LoggingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverTest methodsFor: 'headings' stamp: 'TS 6/3/2023 18:21:01'!
east

	^ MarsRoverHeadingEast ! !

!methodRemoval: MovementTest #east stamp: 'TS 6/3/2023 18:21:01'!
east

	^ MarsRoverHeadingEast !
!MarsRoverTest methodsFor: 'headings' stamp: 'TS 6/3/2023 18:21:03'!
north

	^ MarsRoverHeadingNorth ! !

!methodRemoval: MovementTest #north stamp: 'TS 6/3/2023 18:21:03'!
north

	^ MarsRoverHeadingNorth !
!MarsRoverTest methodsFor: 'headings' stamp: 'TS 6/3/2023 18:21:06'!
west

	^ MarsRoverHeadingWest ! !

!methodRemoval: MovementTest #west stamp: 'TS 6/3/2023 18:21:06'!
west

	^ MarsRoverHeadingWest !
!MarsRoverTest methodsFor: 'headings' stamp: 'TS 6/3/2023 18:21:09'!
south

	^ MarsRoverHeadingSouth ! !

!methodRemoval: MovementTest #south stamp: 'TS 6/3/2023 18:21:09'!
south

	^ MarsRoverHeadingSouth !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:21:27' prior: 50624887!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'f'.
	
	self assert: 1@2 equals: marsRover log first! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:21:28'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:21:28'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:21:28'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:21:28'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:21:32' prior: 50624954!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ff'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second! !

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:21:32'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:21:32'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:21:32'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:21:32'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:21:35' prior: 50625125!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	| marsRover |

	marsRover := MarsRover at: 1@1 heading: self north.
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: marsRover log first.
	self assert: 1@3 equals: marsRover log second.
	self assert: 1@2 equals: marsRover log third! !

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:21:36'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:21:36'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:21:36'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:21:36'!
PASSED!
!MarsRoverTest methodsFor: 'nil' stamp: 'TS 6/3/2023 18:23:06'!
withRoverAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:23:11' prior: 50625335!
withRoverAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock

	! !
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 18:24:23' prior: 50625341!
withRoverAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeading. 
	
	marsRover process: aCommandString.
	
	aBlock value: marsRover! !
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 18:24:28' prior: 50625347!
withRoverAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeading. 
	
	marsRover process: aCommandString.
	
	aBlock value: marsRover! !
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 18:24:34'!
withRoverStartingAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeading. 
	
	marsRover process: aCommandString.
	
	aBlock value: marsRover! !

!methodRemoval: MarsRoverTest #withRoverAt:heading:afterProcessing:do: stamp: 'TS 6/3/2023 18:24:34'!
withRoverAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeading. 
	
	marsRover process: aCommandString.
	
	aBlock value: marsRover!
!MovementTest methodsFor: 'assertions' stamp: 'TS 6/3/2023 18:25:50' prior: 50624523!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	self
		withRoverStartingAt: startPosition
		heading: startHeadingType
		afterProcessing: commands
		do: [:marsRover |
			self assert: (marsRover isAt: newPosition heading: newHeadingType)
		]! !

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 18:25:51'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:25:55'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:25:55'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:25:55'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:26:43' prior: 50625257!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'f'
		do: [:marsRover |
			self assert: 1@2 equals: marsRover log first
		]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:26:43'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:26:44'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:26:44'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:26:44'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:26:58' prior: 50625282!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'ff'
		do: [:marsRover |
			self assert: 1@2 equals: marsRover log first.
			self assert: 1@3 equals: marsRover log second
		]! !

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:26:59'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:26:59'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:26:59'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:26:59'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:27:21' prior: 50625308!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'ffb'
		do: [:marsRover |
			self assert: 1@2 equals: marsRover log first.
			self assert: 1@3 equals: marsRover log second.
			self assert: 1@2 equals: marsRover log third
		]! !

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:27:21'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:27:21'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:27:21'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:27:21'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:27:55'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:27:55'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:27:55'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:31:33'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:31:33'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:31:33'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:31:33'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:32:18'!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'ffb'
		do: [:marsRover |
			self assert: 1@2 equals: marsRover log first.
			self assert: 1@3 equals: marsRover log second.
			self assert: 1@2 equals: marsRover log third
		]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:33:15' prior: 50625572!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'l'
		do: [:marsRover |
			self assert: 'West' equals: marsRover log first
		]! !

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:33:17'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:34:12' prior: 50624579!
rotateLeft
	
	head rotateLeft.
	
	log add: 'West'! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:34:16'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:34:16'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:34:16'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:34:16'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:35:00'!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'll'
		do: [:marsRover |
			self assert: 'West' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
		]! !

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:35:01'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:35:59' prior: 50625598!
rotateLeft
	
	head rotateLeft.
	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:36:05' prior: 50625633!
rotateLeft
	
	head rotateLeft.
	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:36:52'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:36:52'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:36:52'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:36:52'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:36:52'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:37:41'!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'll'
		do: [:marsRover |
			self assert: 'West' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
			self assert: 'East' equals: marsRover log third.
			self assert: 'North' equals: marsRover log fourth.
		]! !

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:37:41'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:38:18' prior: 50625641!
rotateLeft
	
	head rotateLeft.

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ log add: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ log add: 'East' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:38:20'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:38:20'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:38:20'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:38:20'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:38:20'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:38:20'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:38:20'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:38:31' prior: 50625668!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'llll'
		do: [:marsRover |
			self assert: 'West' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
			self assert: 'East' equals: marsRover log third.
			self assert: 'North' equals: marsRover log fourth.
		]! !

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:38:31'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:38:31'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:38:31'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:38:31'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:38:31'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:38:31'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:38:31'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 18:39:39'!
test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		afterProcessing: 'rrr'
		do: [:marsRover |
			self assert: 'East' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
			self assert: 'West' equals: marsRover log third.
		]! !

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:39:40'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:39:57' prior: 50624583!
rotateRight
	
	head rotateRight.
	
	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ log add: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ log add: 'East' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:40:00'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:40:00'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:40:00'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:40:00'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:40:00'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:40:00'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:40:00'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:40:21'!
updateLogWithNewHeading

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ log add: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ log add: 'East' ]! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:40:21' prior: 50625786!
rotateRight
	
	head rotateRight.
	
	self updateLogWithNewHeading.
! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/3/2023 18:40:21' prior: 50625687!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:40:34'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:40:34'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:40:34'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:40:34'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:40:34'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:40:34'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:40:34'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:40:45'!
updateLogWithNewPosition

	^ log add: position! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:40:45' prior: 50625176!
moveForward
	
	head moveForward.
	
	self updateLogWithNewPosition! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:40:45' prior: 50625181!
moveBackward
	
	head moveBackward.
	
	self updateLogWithNewPosition! !

!methodRemoval: MarsRover #updateLog stamp: 'TS 6/3/2023 18:40:45'!
updateLog

	^ log add: position!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:40:49'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:45:32'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:57:59'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:57:59'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:57:59'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:57:59'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:57:59'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:57:59'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:57:59'!
PASSED!
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 18:58:18'!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeading. 
	
	marsRover process: aCommandString.
	
	aBlock value: marsRover! !
!MovementTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625388!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	self
		withRoverStartingAt: startPosition
		heading: startHeadingType
		andCommandString: commands
		afterProcessingDo: [:marsRover |
			self assert: (marsRover isAt: newPosition heading: newHeadingType)
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625617!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		afterProcessingDo: [:marsRover |
			self assert: 'West' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625727!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		afterProcessingDo: [:marsRover |
			self assert: 'West' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
			self assert: 'East' equals: marsRover log third.
			self assert: 'North' equals: marsRover log fourth.
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625585!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'l'
		afterProcessingDo: [:marsRover |
			self assert: 'West' equals: marsRover log first
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625768!
test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		afterProcessingDo: [:marsRover |
			self assert: 'East' equals: marsRover log first.
			self assert: 'South' equals: marsRover log second.
			self assert: 'West' equals: marsRover log third.
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625491!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		afterProcessingDo: [:marsRover |
			self assert: 1@2 equals: marsRover log first.
			self assert: 1@3 equals: marsRover log second
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625518!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		afterProcessingDo: [:marsRover |
			self assert: 1@2 equals: marsRover log first.
			self assert: 1@3 equals: marsRover log second.
			self assert: 1@2 equals: marsRover log third
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 18:58:18' prior: 50625466!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		afterProcessingDo: [:marsRover |
			self assert: 1@2 equals: marsRover log first
		]! !

!methodRemoval: MarsRoverTest #withRoverStartingAt:heading:afterProcessing:do: stamp: 'TS 6/3/2023 18:58:18'!
withRoverStartingAt: aPosition heading: aHeading afterProcessing: aCommandString do: aBlock

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeading. 
	
	marsRover process: aCommandString.
	
	aBlock value: marsRover!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:59:05'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 18:59:22'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head log logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/3/2023 18:59:19' prior: 50624986!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	log := OrderedCollection new.
	logger := nil! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 18:59:36'!
addLogger: aLogger

	logger := aLogger! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:59:38'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 18:59:40'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 18:59:40'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:00:00' prior: 50626144!
addLogger: aLogger

	logger := aLogger
! !

Object subclass: #Logger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 19:00:20'!
Object subclass: #Logger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 19:01:36'!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString beforeProcessingDo: preProcessingBlock afterProcessingDo: postProcessingBlock

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeading. 

	preProcessingBlock value: marsRover.
	
	marsRover process: aCommandString.
	
	postProcessingBlock value: marsRover! !
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 19:02:12' prior: 50625976!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: []
		afterProcessingDo: aBlock! !

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:02:15'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:02:15'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:02:15'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:02:15'!
ERROR!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:02:16'!
ERROR!
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 19:02:42' prior: 50626286!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover | nil ]
		afterProcessingDo: aBlock! !
!MarsRoverTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/3/2023 19:02:44' prior: 50626353!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover | ]
		afterProcessingDo: aBlock! !

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:02:47'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:02:48'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:02:48'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:02:48'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:02:48'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:02:48'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:02:48'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:02:48'!
PASSED!
!LoggingTest methodsFor: 'nil' stamp: 'TS 6/3/2023 19:05:10'!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger for: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:06:35'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:06:35'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:07:36' prior: 50626081!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		afterProcessingDo: [:logger |
			self assert: 1@2 equals: logger lines first
		]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:07:40'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 19:07:44'!
for: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aMarsRover ! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 19:07:47' prior: 50626515!
for: aMarsRover 

	^self new initializeFor: aMarsRover ! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 19:08:29' prior: 50626523!
for: aMarsRover 

	| logger |
	logger := self new.
	
	aMarsRover addLogger: logger.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 19:08:32' prior: 50626528!
for: aMarsRover 

	| logger |
	
	logger := self new.
	
	aMarsRover addLogger: logger.
	
	^ logger! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:08:38'!
ERROR!
!Logger methodsFor: 'accessing' stamp: 'TS 6/3/2023 19:08:48'!
lines
	self shouldBeImplemented.
	^lines! !
!Logger methodsFor: 'accessing' stamp: 'TS 6/3/2023 19:08:51' prior: 50626543!
lines

	^lines! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:08:55'!
ERROR!
!Logger methodsFor: 'nil' stamp: 'TS 6/3/2023 19:09:11' overrides: 16920235!
initialize

	lines := OrderedCollection new! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:09:12'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:09:12'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:09:12'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:09:12'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:09:12'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:09:12'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:09:12'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:09:12'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:09:57' prior: 50625826!
updateLogWithNewHeading

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ log add: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ log add: 'East' ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:10:05'!
addLogLine

	^ log add: 'North'! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:10:05' prior: 50626589!
updateLogWithNewHeading

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLogLine ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ log add: 'East' ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:10:29'!
addLogLine: aLine

	^ log add: 'North'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 19:10:29' prior: 50626605!
updateLogWithNewHeading

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLogLine: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ log add: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ log add: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ log add: 'East' ]! !

!methodRemoval: MarsRover #addLogLine stamp: 'TS 6/3/2023 19:10:29'!
addLogLine

	^ log add: 'North'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 19:10:29' prior: 50626617!
addLogLine: aLine

	^ log add: aLine! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:10:46' prior: 50626622!
updateLogWithNewHeading

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLogLine: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ self addLogLine: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ self addLogLine: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ self addLogLine: 'East' ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:10:54' prior: 50625875!
updateLogWithNewPosition

	^ self addLogLine: position! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:11:02'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:11:02'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:11:02'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:11:02'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:11:02'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:11:02'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:11:02'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:11:02'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:11:21' prior: 50626638!
addLogLine: aLine

	log add: aLine.
	logger addLine: aLine! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:11:27'!
ERROR!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:11:29'!
ERROR!
!Logger methodsFor: 'lines' stamp: 'TS 6/3/2023 19:11:38'!
addLine: aLine 
	self shouldBeImplemented.! !
!Logger methodsFor: 'lines' stamp: 'TS 6/3/2023 19:11:44' prior: 50626726!
addLine: aLine 

	lines add: aLine! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:11:45'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:11:51'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:11:51'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:11:51'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:11:51'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:11:51'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:11:51'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:11:51'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:11:52'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:12:00'!
ERROR!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:12:06'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:12:24' prior: 50626055!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		afterProcessingDo: [:logger |
			self assert: 1@2 equals: logger lines first.
			self assert: 1@3 equals: logger lines second
		]! !

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:12:25'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:12:25'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:12:25'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:12:25'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:12:25'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:12:25'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:12:25'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:12:25'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:12:39' prior: 50626067!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		afterProcessingDo: [:logger |
			self assert: 1@2 equals: logger lines first.
			self assert: 1@3 equals: logger lines second.
			self assert: 1@2 equals: logger lines third
		]! !

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:12:40'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:12:40'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:12:40'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:12:40'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:12:40'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:12:40'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:12:40'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:12:40'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:12:54' prior: 50626030!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'l'
		afterProcessingDo: [:logger |
			self assert: 'West' equals: logger lines first
		]! !

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:12:55'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:12:55'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:12:55'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:12:55'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:12:55'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:12:55'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:12:55'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:12:55'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:13:11' prior: 50626001!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		afterProcessingDo: [:logger |
			self assert: 'West' equals: logger lines first.
			self assert: 'South' equals: logger lines second.
		]! !

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:13:11'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:13:11'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:13:14'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:13:34' prior: 50626014!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		afterProcessingDo: [:logger |
			self assert: 'West' equals: logger lines first.
			self assert: 'South' equals: logger lines second.
			self assert: 'East' equals: logger lines third.
			self assert: 'North' equals: logger lines fourth.
		]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:13:56' prior: 50626041!
test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		afterProcessingDo: [:logger |
			self assert: 'East' equals: logger lines first.
			self assert: 'South' equals: logger lines second.
			self assert: 'West' equals: logger lines third.
		]! !

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:13:57'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:13:58'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:13:58'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:13:58'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:13:58'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:13:58'!
ERROR!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:13:58'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:14:36' prior: 50626691!
addLogLine: aLine

	log add: aLine.
	logger isNil ifFalse: [ logger addLine: aLine ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:14:42' prior: 50627149!
addLogLine: aLine

	log add: aLine.
	logger isNotNil ifTrue: [ logger addLine: aLine ]! !

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:14:45'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:14:45'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:14:45'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:14:45'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:14:45'!
ERROR!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:14:47'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:14:47'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:14:47'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:14:47'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:14:47'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:14:47'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:14:47'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:15:14' prior: 50627155!
addLogLine: aLine

	log add: aLine.
	logger isNil ifFalse: [ logger addLine: aLine ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:15:16'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:15:17'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:15:17'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:15:32' prior: 50627241!
addLogLine: aLine
	logger isNil ifFalse: [ logger addLine: aLine ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:15:34' prior: 50627327!
addLogLine: aLine

	logger isNil ifFalse: [ logger addLine: aLine ]! !
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/3/2023 19:15:38' prior: 50626137!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	logger := nil! !

!methodRemoval: MarsRover #log stamp: 'TS 6/3/2023 19:15:47'!
log

	^ log!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:15:48'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 19:16:05'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:16:08'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:16:08'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:16:08'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:16:08'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:16:08'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:16:08'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:16:08'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:17:24' prior: 50626642!
updateLogWithNewHeading

	logger logHeadingChange: head.

	(head isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLogLine: 'North' ].	
	(head isKindOf: MarsRoverHeadingWest) ifTrue: [ self addLogLine: 'West' ].
	(head isKindOf: MarsRoverHeadingSouth) ifTrue: [ self addLogLine: 'South' ].
	(head isKindOf: MarsRoverHeadingEast) ifTrue: [ self addLogLine: 'East' ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:17:30' prior: 50627409!
updateLogWithNewHeading

	logger logHeadingChange: head.
! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 19:17:52'!
logHeadingChange: aNewHeading

	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLogLine: 'North' ].	
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ self addLogLine: 'West' ].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ self addLogLine: 'South' ].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [ self addLogLine: 'East' ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:17:58'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:17:58'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:17:58'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:17:58'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:17:58'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:17:58'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:17:58'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:18:12' prior: 50627424!
updateLogWithNewHeading

	logger logHeadingChange: head! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:18:28'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:18:28'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:18:28'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:18:28'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:18:28'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:18:28'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:18:28'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:18:29'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 19:18:45' prior: 50627429!
logHeadingChange: aNewHeading

	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLine: 'North' ].	
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ self addLine: 'West' ].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ self addLine: 'South' ].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [ self addLine: 'East' ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:18:49'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:18:49'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:18:49'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:18:49'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:18:49'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:18:49'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:18:49'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:19:17' prior: 50626655!
updateLogWithNewPosition

	logger logPositionChange: position! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:19:22'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:19:22'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:19:22'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:19:22'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:19:22'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:19:22'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:19:22'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:19:23'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 19:20:19'!
logPositionChange: aPosition 
	self shouldBeImplemented.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 19:20:30' prior: 50627584!
logPositionChange: aPosition 

	self addLine: aPosition! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:20:31'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:20:34'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:20:34'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:20:34'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:20:34'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:20:34'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:20:34'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:20:34'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:21:34' prior: 50627471!
updateLogWithNewHeading

	logger isNil ifFalse: [ logger logHeadingChange: head ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 19:21:47' prior: 50627548!
updateLogWithNewPosition

	logger isNil ifFalse: [ logger logPositionChange: position ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:21:50'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:21:51'!
PASSED!

!methodRemoval: MarsRover #addLogLine: stamp: 'TS 6/3/2023 19:22:02'!
addLogLine: aLine

	logger isNil ifFalse: [ logger addLine: aLine ]!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:22:37'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:22:38'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 19:22:40'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 19:22:40'!
PASSED!
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/3/2023 19:25:06'!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withLoggerOfRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		afterProcessingDo: [:logger |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:25:35' prior: 50626501!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		hasLines: { 1@2 }! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:25:38' prior: 50627896!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		hasLines: {
			1@2
		}! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:25:39'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:25:39'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:25:39'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:25:39'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:25:39'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:25:39'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:25:40'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:25:40'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:26:06' prior: 50626777!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		hasLines: {
			1@2.
			1@3
		}! !

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:26:06'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:26:06'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:26:27' prior: 50626820!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		hasLines: {
			1@2.
			1@3.
			1@2
		}! !

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:26:27'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:26:27'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:26:37' prior: 50626864!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

		self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'l'
		hasLines: {
			'West'
		}! !

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:26:38'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:26:38'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:26:42' prior: 50628024!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'l'
		hasLines: {
			'West'
		}! !

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:26:43'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:26:43'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:26:55' prior: 50626905!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

		self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		hasLines: {
			'West'.
			'South'
		}! !

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:26:56'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:26:56'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:27:22' prior: 50627036!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

		self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		hasLines: {
			'West'.
			'South'.
			'East'.
			'North'
		}! !

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:27:22'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:27:22'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:27:26' prior: 50628145!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		hasLines: {
			'West'.
			'South'.
			'East'.
			'North'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:27:30' prior: 50628104!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		hasLines: {
			'West'.
			'South'
		}! !

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:27:30'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:27:30'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:27:52' prior: 50627051!
test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		hasLines: {
			'East'.
			'South'.
			'West'
		}! !

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:27:53'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:28:04'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:28:04'!
PASSED!
!Logger methodsFor: 'logging' stamp: 'TS 6/3/2023 19:28:38' prior: 50627507!
logHeadingChange: aNewHeading

	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ self addLine: 'North' ].	
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ self addLine: 'West' ].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ self addLine: 'South' ].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [ self addLine: 'East' ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 19:28:41'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 19:28:41'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 19:28:41'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 19:28:41'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 19:28:41'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 19:28:41'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 19:28:41'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:53:29'!
test08LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatLogger: [ :marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			'East'.
			'South'.
			'West'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:54:00' prior: 50628351!
test08LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fllf'
		assertThatLogger: [ :marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			1@2.
			1@3
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:54:04' prior: 50628362!
test08LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fllf'
		assertThatLogger: [ :marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			1@2.
			1@1
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:56:07' prior: 50628372!
test08LoggerCanTrackOnlyPositionChanges

	! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:56:35' prior: 50628382!
test08LoggerCanTrackOnlyPositionChanges

	self
		assertThatLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		hasLines: {
			1@2
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:56:57' prior: 50628386!
test08LoggerCanTrackOnlyPositionChanges

	self
		withLoggerOfRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		afterProcessingDo: [:logger |
			self
				assert: {
			1@2
		} asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:57:43' prior: 50628394!
test08LoggerCanTrackOnlyPositionChanges

	| marsRover |
	marsRover := MarsRover at: 1@1 heading: self north.
	
	! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 19:59:04' prior: 50628405!
test08LoggerCanTrackOnlyPositionChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger trackingPositionOf: marsRover.
	
	marsRover process: 'flf'.
	
	self
		assert: {
			1@2.
			0@2
		} asOrderedCollection
		equals: logger lines! !

!testRun: #LoggingTest #test08LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/3/2023 19:59:09'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 19:59:20'!
trackingPositionOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeTrackingPositionOf: aMarsRover ! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 20:01:36'!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.! !

!classDefinition: #MonitoringWindow category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 20:03:17'!
Object subclass: #MonitoringWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 20:03:10' prior: 50628435!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:03:23'!
ERROR!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 20:03:33'!
for: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 20:03:59' prior: 50628467!
for: aMarsRover 

	^ self new! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:01'!
ERROR!
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/3/2023 20:04:07'!
positionField
	self shouldBeImplemented.! !
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/3/2023 20:04:12' prior: 50628484!
positionField

	^ 1@2! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:13'!
ERROR!
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/3/2023 20:04:16'!
headingField
	self shouldBeImplemented.! !
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/3/2023 20:04:21' prior: 50628497!
headingField

	^ nil! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test08LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/3/2023 20:04:22'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:22'!
PASSED!

!testRun: #LoggingTest #test08LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/3/2023 20:04:22'!
ERROR!

!methodRemoval: LoggingTest #test08LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/3/2023 20:04:35'!
test08LoggerCanTrackOnlyPositionChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger trackingPositionOf: marsRover.
	
	marsRover process: 'flf'.
	
	self
		assert: {
			1@2.
			0@2
		} asOrderedCollection
		equals: logger lines!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:36'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:04:39'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:04:39'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/3/2023 20:05:22'!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:05:24'!
FAILURE!

----SNAPSHOT----(3 June 2023 20:29:13) CuisUniversity-5832.image priorSource: 9366758!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:29:24'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:29:24'!
FAILURE!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:29:24'!
FAILURE!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 20:32:09' prior: 50628476!
for: aMarsRover 

	| window |
	window := self new.
	
	aMarsRover addWindow: window.

	^ window! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/3/2023 20:32:13' prior: 50628660!
for: aMarsRover 

	| window |

	window := self new.
	
	aMarsRover addWindow: window.

	^ window! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:32:13'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:32:13'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:32:13'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:32:15'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:32:21'!
addWindow: window 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 20:32:57'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger monitoringWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:32:55' prior: 50628712!
addWindow: aMonitoringWindow

	monitoringWindow := aMonitoringWindow! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:32:58'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:33:00'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 20:33:51' prior: 50625880!
moveForward
	
	head moveForward.
	
	self updateLogWithNewPosition! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:34:08' prior: 50627625!
updateLogWithNewHeading

	logger isNil ifFalse: [ logger logHeadingChange: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:34:22' prior: 50628744!
updateLogWithNewHeading

	logger isNil ifFalse: [ logger logHeadingChange: head ].! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:34:40' prior: 50627631!
updateLogWithNewPosition

	logger isNil ifFalse: [ logger logPositionChange: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:34:44'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:34:44'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:34:44'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:34:45'!
ERROR!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/3/2023 20:34:57'!
updatePosition: aPosition 
	self shouldBeImplemented.! !

!classDefinition: #MonitoringWindow category: 'MarsRover-WithHeading' stamp: 'TS 6/3/2023 20:35:14'!
Object subclass: #MonitoringWindow
	instanceVariableNames: 'positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/3/2023 20:35:13' prior: 50628806!
updatePosition: aPosition 

	positionField := aPosition! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:35:15'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:35:17'!
FAILURE!
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/3/2023 20:35:33' prior: 50628489!
positionField

	^ positionField! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:35:34'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:35:34'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:36:27'!
notifyPositionChanged

	logger isNil ifFalse: [ logger logPositionChange: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 20:36:27' prior: 50628739!
moveForward
	
	head moveForward.
	
	self notifyPositionChanged! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 20:36:27' prior: 50625886!
moveBackward
	
	head moveBackward.
	
	self notifyPositionChanged! !

!methodRemoval: MarsRover #updateLogWithNewPosition stamp: 'TS 6/3/2023 20:36:27'!
updateLogWithNewPosition

	logger isNil ifFalse: [ logger logPositionChange: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 20:36:31'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 20:36:31'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:36:51' prior: 50628871!
notifyPositionChanged

	logger isNil ifFalse: [ logger logPositionChange: position ]! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/3/2023 20:36:58' prior: 50628880!
moveForward
	
	head moveForward.
	
	self notifyPositionChanged.
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/3/2023 20:37:21'!
updateLogWithNewPosition

	logger isNil ifFalse: [ logger logPositionChange: position ]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 20:37:21' prior: 50628885!
moveBackward
	
	head moveBackward.
	
	self updateLogWithNewPosition! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/3/2023 20:37:21' prior: 50628993!
moveForward
	
	head moveForward.
	
	self updateLogWithNewPosition.
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !

!methodRemoval: MarsRover #notifyPositionChanged stamp: 'TS 6/3/2023 20:37:21'!
notifyPositionChanged

	logger isNil ifFalse: [ logger logPositionChange: position ]!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/3/2023 20:37:24'!
PASSED!

----SNAPSHOT----(3 June 2023 20:38:50) CuisUniversity-5832.image priorSource: 9502902!

----QUIT----(3 June 2023 20:39:33) CuisUniversity-5832.image priorSource: 9518807!

----STARTUP---- (4 June 2023 14:48:39) as /home/sponja/Temp/Cuises/cursada3/CuisUniversity-5832.image!

!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:50:25'!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:50:28' prior: 50629122!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:50:42'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:50:42'!
FAILURE!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:50:42'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 14:51:30' prior: 50629006!
moveBackward
	
	head moveBackward.
	
	self updateLogWithNewPosition.
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:51:32'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:51:32'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:51:58'!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:52:24' prior: 50629239!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:52:33'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:52:33'!
FAILURE!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:52:33'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 14:53:52' prior: 50625843!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: 'West' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:53:55'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:53:55'!
FAILURE!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:53:55'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 14:54:08' prior: 50629313!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: 'West' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:54:11'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:54:11'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:54:11'!
ERROR!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:54:16'!
updateHeading: aRenameMe1 
	self shouldBeImplemented.! !

!classDefinition: #MonitoringWindow category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 14:54:36'!
Object subclass: #MonitoringWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:54:34' prior: 50629424!
updateHeading: aHeading
	
	headingField := 'West'! !

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:54:37'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 14:54:48' prior: 50629369!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].
! !
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/4/2023 14:54:55' prior: 50628502!
headingField

	^ headingField! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:54:55'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:54:55'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:55:16'!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:56:27' prior: 50629437!
updateHeading: aHeading
	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'West' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'South' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:56:30'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 14:56:30'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:56:49' prior: 50629501!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 14:56:53'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 14:56:53'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:58:57'!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 14:58:59'!
FAILURE!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:59:39' prior: 50629515!
updateHeading: aHeading

	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ headingField := 'North' ].	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'West' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'South' ].
	(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: [ headingField := 'East' ].
! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:59:53' prior: 50629655!
updateHeading: aHeading

	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ headingField := 'North' ].	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'West' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'South' ].
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [ headingField := 'East' ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:00:03'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:00:03'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:00:37'!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'East' equals: window headingField! !

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:00:43'!
FAILURE!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:00:43'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 15:00:55' prior: 50625838!
rotateRight
	
	head rotateRight.
	
	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:01:00'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:01:00'!
FAILURE!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:01:00'!
FAILURE!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:01:10' prior: 50629735!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:01:11'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:01:33' prior: 50628752!
updateLogWithNewHeading

	logger isNil ifFalse: [ logger logHeadingChange: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 15:01:38' prior: 50629446!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading
! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 15:01:41' prior: 50629758!
rotateRight
	
	head rotateRight.
	
	self updateLogWithNewHeading! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:02:01' prior: 50629000!
updateLogWithNewPosition

	logger isNil ifFalse: [ logger logPositionChange: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 15:02:04' prior: 50629012!
moveForward
	
	head moveForward.
	
	self updateLogWithNewPosition! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 15:02:10' prior: 50629192!
moveBackward
	
	head moveBackward.
	
	self updateLogWithNewPosition! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:02:12'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 15:02:53'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 15:02:53'!
PASSED!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:04:07' prior: 50626534!
for: aMarsRover

	| logger |
	
	logger := self new.
	
	aMarsRover addLogger: logger.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:04:29' prior: 50630049!
for: aMarsRover

	^ self new initializeFor: aMarsRover! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:05:47'!
initializeFor: aMarsRover

	aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	].

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	].


	lines := OrderedCollection new! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:06:20'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger monitoringWindow positionChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:06:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger monitoringWindow positionChangeHandlers headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:06:17' prior: 50627337!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:06:50'!
addPositionChangeHandler: aBlock

	positionChangeHandlers add: aBlock
! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:07:00'!
addHeadingChangeHandler: aBlock

	headingChangeHandlers add: aBlock
! !

!methodRemoval: MarsRover #addLogger: stamp: 'TS 6/4/2023 15:07:07'!
addLogger: aLogger

	logger := aLogger
!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:07:10'!
FAILURE!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:07:10'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:07:19'!
FAILURE!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:07:52' prior: 50629902!
updateLogWithNewHeading

	headingChangeHandlers do: [:aBlock | aBlock value: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:08:02' prior: 50629920!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:08:04'!
FAILURE!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:08:05'!
FAILURE!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:08:05'!
FAILURE!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:08:05'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:08:06'!
FAILURE!

!methodRemoval: Logger #initialize stamp: 'TS 6/4/2023 15:08:28'!
initialize

	lines := OrderedCollection new!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:09:31'!
FAILURE!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:09:31'!
FAILURE!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:09:31'!
FAILURE!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:09:31'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:09:32'!
FAILURE!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:10:09' prior: 50630182!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:10:13'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:10:17'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:10:17'!
PASSED!
!MonitoringWindow methodsFor: 'nil' stamp: 'TS 6/4/2023 15:11:23'!
initializeFor: aMarsRover

	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:11:37' prior: 50628667!
for: aMarsRover 

	^ self new initializeFor: aMarsRover! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:11:38'!
PASSED!

!methodRemoval: MarsRover #addWindow: stamp: 'TS 6/4/2023 15:11:45'!
addWindow: aMonitoringWindow

	monitoringWindow := aMonitoringWindow!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:11:54' prior: 50630315!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: position ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:11:58' prior: 50630174!
updateLogWithNewHeading

	headingChangeHandlers do: [:aBlock | aBlock value: head ]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:12:05'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:12:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head monitoringWindow positionChangeHandlers headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:12:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionChangeHandlers headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:12:33'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 15:12:35'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 15:12:35'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:15:00'!
test15LoggerCanTrackOnlyPositionChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MonitoringWindow trackingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			1@2.
			1@3
		} asOrderedCollection
		equals: logger lines! !

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:15:07'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:15:14' prior: 50630710!
test15LoggerCanTrackOnlyPositionChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := Logger trackingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			1@2.
			1@3
		} asOrderedCollection
		equals: logger lines! !

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:15:15'!
ERROR!
!Logger class methodsFor: 'error handling' stamp: 'TS 6/4/2023 15:15:17' overrides: 16902107!
error: aRenameMe1 
	self shouldBeImplemented.! !

!methodRemoval: Logger class #error: stamp: 'TS 6/4/2023 15:15:32'!
error: aRenameMe1 
	self shouldBeImplemented.!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:16:16' prior: 50628427!
trackingPositionOf: aMarsRover 
	
	^self new initializeTrackingPositionOf: aMarsRover ! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:16:19'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:16:19'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:16:19'!
ERROR!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:16:23'!
Object subclass: #Logger
	instanceVariableNames: 'lines marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:16:23'!
initializeTrackingPositionOf: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:16:27' prior: 50630827!
initializeTrackingPositionOf: aMarsRover 

	! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:16:41' prior: 50630833!
initializeTrackingPositionOf: aMarsRover 

	aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	].

	lines := OrderedCollection new! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:16:44'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:16:44'!
PASSED!
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:00'!
trackPositionOf: aMarsRover

	^ aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	]! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:01' prior: 50630838!
initializeTrackingPositionOf: aMarsRover 

	self trackPositionOf: aMarsRover.

	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:01' prior: 50630060!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	].


	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:07'!
trackHeadingOf: aMarsRover

	^ aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	]! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:07' prior: 50630920!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.

	self trackHeadingOf: aMarsRover.


	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:14' prior: 50630936!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.

	lines := OrderedCollection new! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:17:45'!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeFor: aMarsRover! !

!methodRemoval: Logger class #for: stamp: 'TS 6/4/2023 15:17:45'!
for: aMarsRover

	^ self new initializeFor: aMarsRover!
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:18:34'!
initializeTrackingPositionAndHeadingOf: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.

	lines := OrderedCollection new! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:18:34' prior: 50630950!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover! !

!methodRemoval: Logger #initializeFor: stamp: 'TS 6/4/2023 15:18:34'!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.

	lines := OrderedCollection new!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:18:37'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:18:37'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:18:39'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:18:52'!
for: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover! !

!methodRemoval: Logger class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:18:52'!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:19:13'!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover! !
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:19:13'!
trackingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:19:13'!
trackingPositionAndHeadingOf: aMarsRover 

	^ self new initializeFor: aMarsRover! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50629135!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50628450!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50629827!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624575!
headWest
	
	head := MarsRoverHeadingWest trackingPositionAndHeadingOf: self ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50629572!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624567!
headNorth
	
	head := MarsRoverHeadingNorth trackingPositionAndHeadingOf: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50630090!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType trackingPositionAndHeadingOf: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50629252!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624563!
headEast
	
	head := MarsRoverHeadingEast trackingPositionAndHeadingOf: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50626456!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger trackingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50628599!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50629637!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624571!
headSouth
	
	head := MarsRoverHeadingSouth trackingPositionAndHeadingOf: self! !

!methodRemoval: Logger class #for: stamp: 'TS 6/4/2023 15:19:13'!
for: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover!

!methodRemoval: MarsRoverHeading class #for: stamp: 'TS 6/4/2023 15:19:13'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!methodRemoval: MonitoringWindow class #for: stamp: 'TS 6/4/2023 15:19:13'!
for: aMarsRover 

	^ self new initializeFor: aMarsRover!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:19:15'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:19:15'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:19:44'!
test16LoggerCanTrackOnlyHeadingChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := Logger trackingHeadingOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			1@2.
			1@3
		} asOrderedCollection
		equals: logger lines! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:19:50' prior: 50631300!
test16LoggerCanTrackOnlyHeadingChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := Logger trackingHeadingOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			'West'
		} asOrderedCollection
		equals: logger lines! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:19:53'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:19:53'!
ERROR!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:19:53'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:20:03'!
trackingHeadingOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeTrackingHeadingOf: aMarsRover ! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:20:06' prior: 50631390!
trackingHeadingOf: aMarsRover 

	^self new initializeTrackingHeadingOf: aMarsRover ! !

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:20:07'!
ERROR!
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:20:11'!
initializeTrackingHeadingOf: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:20:35' prior: 50631408!
initializeTrackingHeadingOf: aMarsRover 
	
	self trackHeadingOf: aMarsRover.
	
	lines := OrderedCollection new! !

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:20:36'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:20:38'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:20:38'!
PASSED!
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:20:58' overrides: 16920235!
initialize

	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:21:02' prior: 50631414!
initializeTrackingHeadingOf: aMarsRover 
	
	self trackHeadingOf: aMarsRover.
! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:21:05' prior: 50630959!
initializeTrackingPositionAndHeadingOf: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:21:07' prior: 50630913!
initializeTrackingPositionOf: aMarsRover 

	self trackPositionOf: aMarsRover.
! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:21:10'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 15:21:16'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 15:21:16'!
PASSED!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:21:38' prior: 50631399!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new
	
	logger trackingHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:21:43' prior: 50631691!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new.
	
	logger trackingHeadingOf: aMarsRover.
	
	^ logger! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:21:44'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:21:44'!
ERROR!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:21:44'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:21:53' prior: 50631698!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new.
	
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:21:54'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:21:54'!
PASSED!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:22:04' prior: 50631055!
trackingPositionAndHeadingOf: aMarsRover

	| logger |
	logger := self new.
	
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:22:13' prior: 50631842!
trackingPositionAndHeadingOf: aMarsRover

	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:22:14'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:22:14'!
PASSED!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:22:30' prior: 50630751!
trackingPositionOf: aMarsRover 
	
	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.

	^ logger! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:22:32'!
PASSED!

!methodRemoval: Logger #initializeTrackingHeadingOf: stamp: 'TS 6/4/2023 15:22:35'!
initializeTrackingHeadingOf: aMarsRover 
	
	self trackHeadingOf: aMarsRover.
!

!methodRemoval: Logger #initializeTrackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:22:36'!
initializeTrackingPositionAndHeadingOf: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.!

!methodRemoval: Logger #initializeTrackingPositionOf: stamp: 'TS 6/4/2023 15:22:36'!
initializeTrackingPositionOf: aMarsRover 

	self trackPositionOf: aMarsRover.
!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:22:38'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:22:38'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:25:26'!
test17WindowCanTrackOnlyPosition

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MonitoringWindow showingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: 1@3 equals: logger positionField.
	self assert: nil equals: logger headingField.
	! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:25:31' prior: 50632071!
test17WindowCanTrackOnlyPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField.
	! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:25:32'!
ERROR!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:25:36'!
ERROR!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:25:39'!
showingPositionOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeShowingPositionOf: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:26:11' prior: 50632103!
showingPositionOf: aMarsRover 

	| window |
	window := self new.
	
	window showPositionOf: aMarsRover.
	
	^ window! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:26:19'!
ERROR!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:24'!
showPositionOf: aMarsRover 
	self shouldBeImplemented.! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:40' prior: 50630437!
initializeFor: aMarsRover

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:50' prior: 50632122!
showPositionOf: aMarsRover 
	
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:51' prior: 50632134!
showPositionOf: aMarsRover 

	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:26:56'!
FAILURE!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:26:56'!
FAILURE!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:26:56'!
FAILURE!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:26:56'!
FAILURE!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:26:56'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:26:57'!
FAILURE!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:08' prior: 50632127!
initializeFor: aMarsRover
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].
	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:11' prior: 50632220!
initializeFor: aMarsRover
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].
	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:12' prior: 50632230!
initializeFor: aMarsRover
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:27:13'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:27:13'!
PASSED!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:28' prior: 50632240!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:27:28'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:27:28'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:27:50'!
test17WindowCanTrackOnlyHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField.
	! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:27:51'!
FAILURE!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:27:57' prior: 50632391!
test17WindowCanTrackOnlyHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingHeadingOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField.
	! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:27:58'!
ERROR!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:28:01'!
showingHeadingOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeShowingHeadingOf: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:28:23' prior: 50632423!
showingHeadingOf: aMarsRover 

	| window |
	window := self new.
	
	window showHeadingOf: aMarsRover.
	
	^ window! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:28:24'!
ERROR!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:28:24'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:28:24'!
ERROR!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:28'!
showHeadingOf: aMarsRover 
	self shouldBeImplemented.! !

!methodRemoval: MonitoringWindow #showHeadingOf: stamp: 'TS 6/4/2023 15:28:33'!
showHeadingOf: aMarsRover 
	self shouldBeImplemented.!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:41'!
showHeadingOf: aMarsRover

	^ aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	]! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:41' prior: 50632317!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.

	self showHeadingOf: aMarsRover.! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:28:44'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:28:44'!
PASSED!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:48' prior: 50632527!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.
	self showHeadingOf: aMarsRover.! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:28:49'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:28:49'!
PASSED!
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:29:27'!
showingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:29:27'!
showingPositionAndHeadingOf: aMarsRover 

	^ self new initializeFor: aMarsRover! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631222!
headSouth
	
	head := MarsRoverHeadingSouth showingPositionAndHeadingOf: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631156!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631139!
headNorth
	
	head := MarsRoverHeadingNorth showingPositionAndHeadingOf: self ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631207!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631074!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631176!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger showingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631124!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631103!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631118!
headWest
	
	head := MarsRoverHeadingWest showingPositionAndHeadingOf: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631145!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType showingPositionAndHeadingOf: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631192!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631170!
headEast
	
	head := MarsRoverHeadingEast showingPositionAndHeadingOf: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50631089!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !

!methodRemoval: MarsRoverHeading class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:29:27'!
trackingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!methodRemoval: MonitoringWindow class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:29:27'!
trackingPositionAndHeadingOf: aMarsRover 

	^ self new initializeFor: aMarsRover!
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:29:59'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632732!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632777!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632746!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger for: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632792!
headWest
	
	head := MarsRoverHeadingWest for: self ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632762!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632823!
headEast
	
	head := MarsRoverHeadingEast for: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632711!
headNorth
	
	head := MarsRoverHeadingNorth for: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632691!
headSouth
	
	head := MarsRoverHeadingSouth for: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632829!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632809!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632717!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632697!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50632798!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !

!methodRemoval: MarsRoverHeading class #showingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:29:59'!
showingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:30:02'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:30:02'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:30:02'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:30:02'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:30:02'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:30:03'!
ERROR!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:30:13'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 15:30:13'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 15:30:13'!
PASSED!
!LoggingTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/4/2023 15:30:32' prior: 50632888!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger trackingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:30:33'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:30:33'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:30:34'!
ERROR!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:30:57' prior: 50632937!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:30:58'!
ERROR!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:30:58'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:30:58'!
ERROR!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:30:58'!
ERROR!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:30:58'!
ERROR!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:30:58'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:30:58'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:30:58'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:03' prior: 50632951!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:07' prior: 50632860!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:09' prior: 50632979!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:12' prior: 50632908!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:14' prior: 50632965!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:17' prior: 50632874!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:31:21'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 15:31:23'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 15:31:23'!
PASSED!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:31:44' prior: 50632685!
showingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window showPositionOf: aMarsRover.	
	window showHeadingOf: aMarsRover.
	
	^ window! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:31:45'!
PASSED!

!methodRemoval: MonitoringWindow #initializeFor: stamp: 'TS 6/4/2023 15:31:50'!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.
	self showHeadingOf: aMarsRover.!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:31:51'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:31:51'!
PASSED!
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:37:57'!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString assertThatLogger: aLoggerCreatingBlock hasLines: aCollectionOfLines

	| logger |
	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := aLoggerCreatingBlock value: marsRover
		]
		afterProcessingDo: [:marsRover |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:38:03' prior: 50633810!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString assertThatLogger: aLoggerCreatingBlock hasLines: aCollectionOfLines

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := aLoggerCreatingBlock value: marsRover
		]
		afterProcessingDo: [:marsRover |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:39:17' prior: 50627882!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		afterProcessingDo: [:logger |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:39:51' prior: 50633846!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: aCollectionOfLines! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:39:52'!
PASSED!

!methodRemoval: LoggingTest #assertThatLoggerOfRoverStartingAt:heading:andCommandString:hasLines: stamp: 'TS 6/4/2023 15:40:04'!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: aCollectionOfLines!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628196!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'West'.
			'South'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628064!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'l'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'West'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628237!
test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'East'.
			'South'.
			'West'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628186!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'West'.
			'South'.
			'East'.
			'North'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50627904!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			1@2
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50627984!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			1@2.
			1@3.
			1@2
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50627944!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			1@2.
			1@3
		}! !

!methodRemoval: LoggingTest #withLoggerOfRoverStartingAt:heading:andCommandString:afterProcessingDo: stamp: 'TS 6/4/2023 15:40:26'!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger trackingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]!
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:41:42'!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString assertThatWindow: aWindowCreatingBlock hasPositionField: aValueForPositionField andHeadingField: aValueForHeadingField

	| window |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			window := aWindowCreatingBlock value: marsRover
		]
		afterProcessingDo: [:marsRover |
			self assert: aValueForPositionField equals: window positionField.
			self assert: aValueForHeadingField equals: window headingField
		]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:41:46'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:41:46'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:42:56' prior: 50633291!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: nil! !

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:42:57'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:42:57'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:08' prior: 50633378!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@3 andHeadingField: nil! !

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:43:08'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:43:08'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:18' prior: 50633392!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: nil! !

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:43:18'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:43:18'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:30' prior: 50633406!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fl'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: 'West'! !

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:43:31'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:43:31'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:52' prior: 50633420!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'South'! !

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:43:52'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:43:52'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:44:06' prior: 50633434!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'North'! !

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:44:07'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:44:07'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:44:23' prior: 50633448!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'! !

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:44:23'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:44:23'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:44:52' prior: 50630726!
test15LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			1@2.
			1@3
		}! !

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:44:53'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:44:53'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:05' prior: 50631312!
test16LoggerCanTrackOnlyHeadingChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingHeadingOf: marsRover ]
		hasLines: {
			'West'
		}! !

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:45:06'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:45:06'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:27' prior: 50632407!
test17WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:45:28'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:45:28'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:34'!
test18WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'! !

!methodRemoval: LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:45:34'!
test17WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:49' prior: 50632084!
test17WindowCanTrackOnlyPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionOf: marsRover ]
		hasPositionField: 1@3 andHeadingField: nil! !

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:45:49'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:45:49'!
PASSED!
!Logger methodsFor: 'lines' stamp: 'TS 6/4/2023 15:51:41' prior: 50626547!
lines

	^ lines! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:51:42'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:51:42'!
PASSED!
!MonitoringWindow methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:52:12' prior: 50632520!
showHeadingOf: aMarsRover

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:52:13'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:52:13'!
PASSED!
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:52:18' prior: 50630929!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:52:18'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:52:18'!
PASSED!
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:52:24' prior: 50630906!
trackPositionOf: aMarsRover

	aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:52:24'!
PASSED!

!classDefinition: #ChangeTrackingProxy category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:54:35'!
Object subclass: #ChangeTrackingProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:54:25' prior: 50632993!
initializeAt: aPosition heading: aHeadingType

	position := ChangeTrackingProxy for: aPosition.
	head := ChangeTrackingProxy for: (aHeadingType for: self).
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:54:40'!
ERROR!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:54:41'!
ERROR!
!ChangeTrackingProxy class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:54:48'!
for: aPosition 
	self shouldBeImplemented.! !
!ChangeTrackingProxy class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:55:10' prior: 50635494!
for: aValue

	^ self new initializeFor: aValue! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:55:11'!
ERROR!

!classDefinition: #ChangeTrackingProxy category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:55:19'!
Object subclass: #ChangeTrackingProxy
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!ChangeTrackingProxy methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:55:19'!
initializeFor: aValue 
	self shouldBeImplemented.
	value := aValue.! !
!ChangeTrackingProxy methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:55:21' prior: 50635515!
initializeFor: aValue 

	value := aValue.! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 15:55:22'!
ERROR!

ProtoObject subclass: #ChangeTrackingProxy
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----STARTUP---- (4 June 2023 15:56:58) as /home/sponja/Temp/Cuises/cursada3/CuisUniversity-5832.image!

!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:50:25'!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:50:28' prior: 50635537!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 14:51:30' prior: 50629006!
moveBackward
	
	head moveBackward.
	
	self updateLogWithNewPosition.
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:51:58'!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:52:24' prior: 50635570!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 14:53:52' prior: 50625843!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: 'West' ].
! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 14:54:08' prior: 50635596!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: 'West' ].
! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:54:16'!
updateHeading: aRenameMe1 
	self shouldBeImplemented.! !

!classDefinition: #MonitoringWindow category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:08'!
Object subclass: #MonitoringWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:54:34' prior: 50635611!
updateHeading: aHeading
	
	headingField := 'West'! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 14:54:48' prior: 50635604!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].
! !
!MonitoringWindow methodsFor: 'fields' stamp: 'TS 6/4/2023 14:54:55' prior: 50628502!
headingField

	^ headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:55:16'!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:56:27' prior: 50635624!
updateHeading: aHeading
	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'West' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'South' ].
! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:56:49' prior: 50635641!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 14:58:57'!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:59:39' prior: 50635655!
updateHeading: aHeading

	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ headingField := 'North' ].	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'West' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'South' ].
	(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: [ headingField := 'East' ].
! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 14:59:53' prior: 50635691!
updateHeading: aHeading

	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ headingField := 'North' ].	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'West' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'South' ].
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [ headingField := 'East' ].
! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:00:37'!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'East' equals: window headingField! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 15:00:55' prior: 50625838!
rotateRight
	
	head rotateRight.
	
	self updateLogWithNewHeading.
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].
! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:01:10' prior: 50635718!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:01:33' prior: 50628752!
updateLogWithNewHeading

	logger isNil ifFalse: [ logger logHeadingChange: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 15:01:38' prior: 50635629!
rotateLeft
	
	head rotateLeft.

	self updateLogWithNewHeading
! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 15:01:41' prior: 50635732!
rotateRight
	
	head rotateRight.
	
	self updateLogWithNewHeading! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:02:01' prior: 50629000!
updateLogWithNewPosition

	logger isNil ifFalse: [ logger logPositionChange: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 15:02:04' prior: 50629012!
moveForward
	
	head moveForward.
	
	self updateLogWithNewPosition! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 15:02:10' prior: 50635563!
moveBackward
	
	head moveBackward.
	
	self updateLogWithNewPosition! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:04:07' prior: 50626534!
for: aMarsRover

	| logger |
	
	logger := self new.
	
	aMarsRover addLogger: logger.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:04:29' prior: 50635791!
for: aMarsRover

	^ self new initializeFor: aMarsRover! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:05:47'!
initializeFor: aMarsRover

	aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	].

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	].


	lines := OrderedCollection new! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:08'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger monitoringWindow positionChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:08'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger monitoringWindow positionChangeHandlers headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:06:17' prior: 50627337!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:06:50'!
addPositionChangeHandler: aBlock

	positionChangeHandlers add: aBlock
! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:07:00'!
addHeadingChangeHandler: aBlock

	headingChangeHandlers add: aBlock
! !

!methodRemoval: MarsRover #addLogger: stamp: 'TS 6/4/2023 15:57:08'!
addLogger: aLogger

	logger := aLogger
!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:07:52' prior: 50635754!
updateLogWithNewHeading

	headingChangeHandlers do: [:aBlock | aBlock value: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updateHeading: head ].! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:08:02' prior: 50635772!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: head ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !

!methodRemoval: Logger #initialize stamp: 'TS 6/4/2023 15:57:08'!
initialize

	lines := OrderedCollection new!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:10:09' prior: 50635863!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: position ].
	monitoringWindow isNil ifFalse: [ monitoringWindow updatePosition: position ]! !
!MonitoringWindow methodsFor: 'nil' stamp: 'TS 6/4/2023 15:11:23'!
initializeFor: aMarsRover

	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:11:37' prior: 50628667!
for: aMarsRover 

	^ self new initializeFor: aMarsRover! !

!methodRemoval: MarsRover #addWindow: stamp: 'TS 6/4/2023 15:57:08'!
addWindow: aMonitoringWindow

	monitoringWindow := aMonitoringWindow!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:11:54' prior: 50635875!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: position ]! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 15:11:58' prior: 50635855!
updateLogWithNewHeading

	headingChangeHandlers do: [:aBlock | aBlock value: head ]! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:08'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head monitoringWindow positionChangeHandlers headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:08'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionChangeHandlers headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:15:00'!
test15LoggerCanTrackOnlyPositionChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MonitoringWindow trackingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			1@2.
			1@3
		} asOrderedCollection
		equals: logger lines! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:15:14' prior: 50635932!
test15LoggerCanTrackOnlyPositionChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := Logger trackingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			1@2.
			1@3
		} asOrderedCollection
		equals: logger lines! !
!Logger class methodsFor: 'error handling' stamp: 'TS 6/4/2023 15:15:17' overrides: 16902107!
error: aRenameMe1 
	self shouldBeImplemented.! !

!methodRemoval: Logger class #error: stamp: 'TS 6/4/2023 15:57:08'!
error: aRenameMe1 
	self shouldBeImplemented.!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:16:16' prior: 50628427!
trackingPositionOf: aMarsRover 
	
	^self new initializeTrackingPositionOf: aMarsRover ! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:08'!
Object subclass: #Logger
	instanceVariableNames: 'lines marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:16:23'!
initializeTrackingPositionOf: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:16:27' prior: 50635978!
initializeTrackingPositionOf: aMarsRover 

	! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:16:41' prior: 50635984!
initializeTrackingPositionOf: aMarsRover 

	aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	].

	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:00'!
trackPositionOf: aMarsRover

	^ aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	]! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:01' prior: 50635989!
initializeTrackingPositionOf: aMarsRover 

	self trackPositionOf: aMarsRover.

	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:01' prior: 50635802!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	].


	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:07'!
trackHeadingOf: aMarsRover

	^ aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	]! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:07' prior: 50636011!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.

	self trackHeadingOf: aMarsRover.


	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:17:14' prior: 50636027!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.

	lines := OrderedCollection new! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:17:45'!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeFor: aMarsRover! !

!methodRemoval: Logger class #for: stamp: 'TS 6/4/2023 15:57:08'!
for: aMarsRover

	^ self new initializeFor: aMarsRover!
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:18:34'!
initializeTrackingPositionAndHeadingOf: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.

	lines := OrderedCollection new! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:18:34' prior: 50636041!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover! !

!methodRemoval: Logger #initializeFor: stamp: 'TS 6/4/2023 15:57:08'!
initializeFor: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.

	lines := OrderedCollection new!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:18:52'!
for: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover! !

!methodRemoval: Logger class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:57:08'!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover!
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:19:13'!
trackingPositionAndHeadingOf: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover! !
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:19:13'!
trackingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:19:13'!
trackingPositionAndHeadingOf: aMarsRover 

	^ self new initializeFor: aMarsRover! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50635550!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50628450!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50635740!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624575!
headWest
	
	head := MarsRoverHeadingWest trackingPositionAndHeadingOf: self ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50635664!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624567!
headNorth
	
	head := MarsRoverHeadingNorth trackingPositionAndHeadingOf: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50635832!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType trackingPositionAndHeadingOf: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50635583!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624563!
headEast
	
	head := MarsRoverHeadingEast trackingPositionAndHeadingOf: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50626456!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger trackingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50628599!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50635677!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:19:13' prior: 50624571!
headSouth
	
	head := MarsRoverHeadingSouth trackingPositionAndHeadingOf: self! !

!methodRemoval: Logger class #for: stamp: 'TS 6/4/2023 15:57:08'!
for: aMarsRover

	^ self new initializeTrackingPositionAndHeadingOf: aMarsRover!

!methodRemoval: MarsRoverHeading class #for: stamp: 'TS 6/4/2023 15:57:08'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!methodRemoval: MonitoringWindow class #for: stamp: 'TS 6/4/2023 15:57:08'!
for: aMarsRover 

	^ self new initializeFor: aMarsRover!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:19:44'!
test16LoggerCanTrackOnlyHeadingChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := Logger trackingHeadingOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			1@2.
			1@3
		} asOrderedCollection
		equals: logger lines! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:19:50' prior: 50636268!
test16LoggerCanTrackOnlyHeadingChanges

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := Logger trackingHeadingOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self
		assert: {
			'West'
		} asOrderedCollection
		equals: logger lines! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:20:03'!
trackingHeadingOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeTrackingHeadingOf: aMarsRover ! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:20:06' prior: 50636292!
trackingHeadingOf: aMarsRover 

	^self new initializeTrackingHeadingOf: aMarsRover ! !
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:20:11'!
initializeTrackingHeadingOf: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:20:35' prior: 50636307!
initializeTrackingHeadingOf: aMarsRover 
	
	self trackHeadingOf: aMarsRover.
	
	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:20:58' overrides: 16920235!
initialize

	lines := OrderedCollection new! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:21:02' prior: 50636313!
initializeTrackingHeadingOf: aMarsRover 
	
	self trackHeadingOf: aMarsRover.
! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:21:05' prior: 50636050!
initializeTrackingPositionAndHeadingOf: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.! !
!Logger methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:21:07' prior: 50636004!
initializeTrackingPositionOf: aMarsRover 

	self trackPositionOf: aMarsRover.
! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:21:38' prior: 50636301!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new
	
	logger trackingHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:21:43' prior: 50636344!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new.
	
	logger trackingHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:21:53' prior: 50636351!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new.
	
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:22:04' prior: 50636083!
trackingPositionAndHeadingOf: aMarsRover

	| logger |
	logger := self new.
	
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:22:13' prior: 50636365!
trackingPositionAndHeadingOf: aMarsRover

	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !
!Logger class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:22:30' prior: 50635965!
trackingPositionOf: aMarsRover 
	
	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.

	^ logger! !

!methodRemoval: Logger #initializeTrackingHeadingOf: stamp: 'TS 6/4/2023 15:57:08'!
initializeTrackingHeadingOf: aMarsRover 
	
	self trackHeadingOf: aMarsRover.
!

!methodRemoval: Logger #initializeTrackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:57:08'!
initializeTrackingPositionAndHeadingOf: aMarsRover

	self trackPositionOf: aMarsRover.
	self trackHeadingOf: aMarsRover.!

!methodRemoval: Logger #initializeTrackingPositionOf: stamp: 'TS 6/4/2023 15:57:08'!
initializeTrackingPositionOf: aMarsRover 

	self trackPositionOf: aMarsRover.
!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:25:26'!
test17WindowCanTrackOnlyPosition

	| marsRover logger |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MonitoringWindow showingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: 1@3 equals: logger positionField.
	self assert: nil equals: logger headingField.
	! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:25:31' prior: 50636404!
test17WindowCanTrackOnlyPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField.
	! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:25:39'!
showingPositionOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeShowingPositionOf: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:26:11' prior: 50636430!
showingPositionOf: aMarsRover 

	| window |
	window := self new.
	
	window showPositionOf: aMarsRover.
	
	^ window! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:24'!
showPositionOf: aMarsRover 
	self shouldBeImplemented.! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:40' prior: 50635883!
initializeFor: aMarsRover

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:50' prior: 50636446!
showPositionOf: aMarsRover 
	
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:26:51' prior: 50636458!
showPositionOf: aMarsRover 

	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:08' prior: 50636451!
initializeFor: aMarsRover
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].
	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:11' prior: 50636473!
initializeFor: aMarsRover
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].
	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:12' prior: 50636483!
initializeFor: aMarsRover
	aMarsRover addPositionChangeHandler: [:newPosition |
		self updatePosition: newPosition
	].

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:27:28' prior: 50636493!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	].! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:27:50'!
test17WindowCanTrackOnlyHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField.
	! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:27:57' prior: 50636510!
test17WindowCanTrackOnlyHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingHeadingOf: marsRover.
	
	marsRover process: 'ffl'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField.
	! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:28:01'!
showingHeadingOf: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeShowingHeadingOf: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:28:23' prior: 50636536!
showingHeadingOf: aMarsRover 

	| window |
	window := self new.
	
	window showHeadingOf: aMarsRover.
	
	^ window! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:28'!
showHeadingOf: aMarsRover 
	self shouldBeImplemented.! !

!methodRemoval: MonitoringWindow #showHeadingOf: stamp: 'TS 6/4/2023 15:57:08'!
showHeadingOf: aMarsRover 
	self shouldBeImplemented.!
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:41'!
showHeadingOf: aMarsRover

	^ aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	]! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:41' prior: 50636503!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.

	self showHeadingOf: aMarsRover.! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:28:48' prior: 50636568!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.
	self showHeadingOf: aMarsRover.! !
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:29:27'!
showingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:29:27'!
showingPositionAndHeadingOf: aMarsRover 

	^ self new initializeFor: aMarsRover! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636250!
headSouth
	
	head := MarsRoverHeadingSouth showingPositionAndHeadingOf: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636184!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636167!
headNorth
	
	head := MarsRoverHeadingNorth showingPositionAndHeadingOf: self ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636235!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636102!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636204!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger showingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636152!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636131!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636146!
headWest
	
	head := MarsRoverHeadingWest showingPositionAndHeadingOf: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636173!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType showingPositionAndHeadingOf: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636220!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636198!
headEast
	
	head := MarsRoverHeadingEast showingPositionAndHeadingOf: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:27' prior: 50636117!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !

!methodRemoval: MarsRoverHeading class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:57:08'!
trackingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!methodRemoval: MonitoringWindow class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:57:08'!
trackingPositionAndHeadingOf: aMarsRover 

	^ self new initializeFor: aMarsRover!
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:29:59'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636634!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636679!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636648!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger for: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636694!
headWest
	
	head := MarsRoverHeadingWest for: self ! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636664!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636725!
headEast
	
	head := MarsRoverHeadingEast for: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636613!
headNorth
	
	head := MarsRoverHeadingNorth for: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636593!
headSouth
	
	head := MarsRoverHeadingSouth for: self! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636731!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636711!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636619!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636599!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow for: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:29:59' prior: 50636700!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !

!methodRemoval: MarsRoverHeading class #showingPositionAndHeadingOf: stamp: 'TS 6/4/2023 15:57:09'!
showingPositionAndHeadingOf: aMarsRover 
	
	^self new initializeFor: aMarsRover !
!LoggingTest methodsFor: 'setUp/tearDown' stamp: 'TS 6/4/2023 15:30:32' prior: 50636790!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger trackingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:30:57' prior: 50636839!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:03' prior: 50636853!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:07' prior: 50636762!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'ffb'.
	
	self assert: 1@2 equals: window positionField.
	self assert: nil equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:09' prior: 50636881!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: 1@2 equals: window positionField.
	self assert: 'West' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:12' prior: 50636810!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'll'.
	
	self assert: nil equals: window positionField.
	self assert: 'South' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:14' prior: 50636867!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'llll'.
	
	self assert: nil equals: window positionField.
	self assert: 'North' equals: window headingField! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:31:17' prior: 50636776!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: nil equals: window positionField.
	self assert: 'West' equals: window headingField! !
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 15:31:44' prior: 50636587!
showingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window showPositionOf: aMarsRover.	
	window showHeadingOf: aMarsRover.
	
	^ window! !

!methodRemoval: MonitoringWindow #initializeFor: stamp: 'TS 6/4/2023 15:57:09'!
initializeFor: aMarsRover
	
	self showPositionOf: aMarsRover.
	self showHeadingOf: aMarsRover.!
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:37:57'!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString assertThatLogger: aLoggerCreatingBlock hasLines: aCollectionOfLines

	| logger |
	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := aLoggerCreatingBlock value: marsRover
		]
		afterProcessingDo: [:marsRover |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:38:03' prior: 50637037!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString assertThatLogger: aLoggerCreatingBlock hasLines: aCollectionOfLines

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := aLoggerCreatingBlock value: marsRover
		]
		afterProcessingDo: [:marsRover |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:39:17' prior: 50627882!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		afterProcessingDo: [:logger |
			self
				assert: aCollectionOfLines asOrderedCollection
				equals: logger lines
			]! !
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:39:51' prior: 50637073!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: aCollectionOfLines! !

!methodRemoval: LoggingTest #assertThatLoggerOfRoverStartingAt:heading:andCommandString:hasLines: stamp: 'TS 6/4/2023 15:57:09'!
assertThatLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString hasLines: aCollectionOfLines

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: aCollectionOfLines!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628196!
test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'West'.
			'South'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628064!
test04LogOfMarsRoverThatRotatesLeftContainsNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'l'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'West'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628237!
test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'East'.
			'South'.
			'West'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50628186!
test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'West'.
			'South'.
			'East'.
			'North'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50627904!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			1@2
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50627984!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			1@2.
			1@3.
			1@2
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:40:04' prior: 50627944!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			1@2.
			1@3
		}! !

!methodRemoval: LoggingTest #withLoggerOfRoverStartingAt:heading:andCommandString:afterProcessingDo: stamp: 'TS 6/4/2023 15:57:09'!
withLoggerOfRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString afterProcessingDo: aBlock

	| logger |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			logger := Logger trackingPositionAndHeadingOf: marsRover
		]
		afterProcessingDo: [:marsRover |
			aBlock value: logger
		]!
!LoggingTest methodsFor: 'assertions' stamp: 'TS 6/4/2023 15:41:42'!
withRoverStartingAt: aPosition heading: aHeading andCommandString: aCommandString assertThatWindow: aWindowCreatingBlock hasPositionField: aValueForPositionField andHeadingField: aValueForHeadingField

	| window |

	self
		withRoverStartingAt: aPosition
		heading: aHeading
		andCommandString: aCommandString
		beforeProcessingDo: [:marsRover |
			window := aWindowCreatingBlock value: marsRover
		]
		afterProcessingDo: [:marsRover |
			self assert: aValueForPositionField equals: window positionField.
			self assert: aValueForHeadingField equals: window headingField
		]! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:42:56' prior: 50636925!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:08' prior: 50636939!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@3 andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:18' prior: 50636953!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:30' prior: 50636967!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fl'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: 'West'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:43:52' prior: 50636981!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'South'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:44:06' prior: 50636995!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'North'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:44:23' prior: 50637009!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:44:52' prior: 50635944!
test15LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			1@2.
			1@3
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:05' prior: 50636280!
test16LoggerCanTrackOnlyHeadingChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingHeadingOf: marsRover ]
		hasLines: {
			'West'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:27' prior: 50636523!
test17WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:34'!
test18WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'! !

!methodRemoval: LoggingTest #test17WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 15:57:09'!
test17WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'West'!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 15:45:49' prior: 50636417!
test17WindowCanTrackOnlyPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionOf: marsRover ]
		hasPositionField: 1@3 andHeadingField: nil! !
!Logger methodsFor: 'lines' stamp: 'TS 6/4/2023 15:51:41' prior: 50626547!
lines

	^ lines! !
!MonitoringWindow methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:52:12' prior: 50636561!
showHeadingOf: aMarsRover

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self updateHeading: newHeading
	]! !
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:52:18' prior: 50636020!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingChangeHandler: [:newHeading |
		self logHeadingChange: newHeading
	]! !
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 15:52:24' prior: 50635997!
trackPositionOf: aMarsRover

	aMarsRover addPositionChangeHandler: [:newPosition |
		self logPositionChange: newPosition
	]! !

!classDefinition: #ChangeTrackingProxy category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:09'!
Object subclass: #ChangeTrackingProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:54:25' prior: 50636895!
initializeAt: aPosition heading: aHeadingType

	position := ChangeTrackingProxy for: aPosition.
	head := ChangeTrackingProxy for: (aHeadingType for: self).
	positionChangeHandlers := OrderedCollection new.
	headingChangeHandlers := OrderedCollection new.! !
!ChangeTrackingProxy class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:54:48'!
for: aPosition 
	self shouldBeImplemented.! !
!ChangeTrackingProxy class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 15:55:10' prior: 50637422!
for: aValue

	^ self new initializeFor: aValue! !

!classDefinition: #ChangeTrackingProxy category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:09'!
Object subclass: #ChangeTrackingProxy
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!ChangeTrackingProxy methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:55:19'!
initializeFor: aValue 
	self shouldBeImplemented.
	value := aValue.! !
!ChangeTrackingProxy methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:55:21' prior: 50637440!
initializeFor: aValue 

	value := aValue.! !

!classDefinition: #ChangeTrackingProxy category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 15:57:09'!
ProtoObject subclass: #ChangeTrackingProxy
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----SNAPSHOT----(4 June 2023 15:57:40) CuisUniversity-5832.image priorSource: 9518895!
!ChangeTrackingProxy methodsFor: 'initialization' stamp: 'TS 6/4/2023 15:57:55' prior: 50637446!
initializeFor: aValue 

	value := aValue! !

----End fileIn of /home/sponja/Downloads/DesignPatterns-Proxy.st----!
!ChangeTrackingProxy methodsFor: 'nil' stamp: 'TS 6/4/2023 16:00:09' overrides: 16920394!
doesNotUnderstand: aMessage! !
!ChangeTrackingProxy methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:00:40' prior: 50637616 overrides: 16920394!
doesNotUnderstand: aMessage

	^ aMessage sendTo: value! !

!classDefinition: #ChangeTrackingProxy category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 16:01:43'!
ProtoObject subclass: #ChangeTrackingProxy
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!ChangeTrackingProxy methodsFor: 'nil' stamp: 'TS 6/4/2023 16:01:41'!
addObserver: aBlock

	observers add: aBlock! !
!ChangeTrackingProxy methodsFor: 'initialization' stamp: 'TS 6/4/2023 16:01:54' prior: 50637462!
initializeFor: aValue 

	value := aValue.
	observers := OrderedCollection new! !
!ChangeTrackingProxy methodsFor: 'nil' stamp: 'TS 6/4/2023 16:02:39'!
value: aNewValue

	self notifyObservers: aNewValue.
	value := aNewValue! !
!ChangeTrackingProxy methodsFor: 'observing' stamp: 'TS 6/4/2023 16:03:04'!
notifyObservers: aNewValue

	observers do: [:aBlock | aBlock value: aNewValue ]! !
!ChangeTrackingProxy methodsFor: 'observing' stamp: 'TS 6/4/2023 16:03:31' prior: 50637649!
notifyObservers: aNewValue

	observers do: [:aBlock | aBlock value: value ]! !
!ChangeTrackingProxy methodsFor: 'observing' stamp: 'TS 6/4/2023 16:03:41'!
notifyObservers

	observers do: [:aBlock | aBlock value: value ]! !
!ChangeTrackingProxy methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:03:41' prior: 50637644!
value: aNewValue

	self notifyObservers.
	value := aNewValue! !

!methodRemoval: ChangeTrackingProxy #notifyObservers: stamp: 'TS 6/4/2023 16:03:41'!
notifyObservers: aNewValue

	observers do: [:aBlock | aBlock value: value ]!
!ChangeTrackingProxy methodsFor: 'accessing' stamp: 'TS 6/4/2023 16:03:56' prior: 50637666!
value: aNewValue

	value := aNewValue.
	self notifyObservers! !
!MarsRover methodsFor: 'initialization' stamp: 'TS 6/4/2023 16:04:10' prior: 50637411!
initializeAt: aPosition heading: aHeadingType

	position := ChangeTrackingProxy for: aPosition.
	head := ChangeTrackingProxy for: (aHeadingType for: self).
! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 16:04:31' prior: 50624613!
moveEast
	
	position value: position + (1@0)! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 16:04:36' prior: 50624621!
moveNorth
	
	position value: position + (0@1)! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 16:04:38' prior: 50624625!
moveSouth
	
	position value: position + (0@-1)! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 16:04:41' prior: 50624629!
moveWest
	
	position value: position + (-1@0)! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:05:21' prior: 50636824!
headEast
	
	head value: (MarsRoverHeadingEast for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:05:31' prior: 50636829!
headNorth
	
	head value: (MarsRoverHeadingNorth for: self )! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:05:32' prior: 50637712!
headNorth
	
	head value: (MarsRoverHeadingNorth for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:05:37' prior: 50636834!
headSouth
	
	head value: (MarsRoverHeadingSouth for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:05:42' prior: 50636805!
headWest
	
	head value: (MarsRoverHeadingWest for: self)! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 16:06:00' prior: 50635846!
addHeadingChangeHandler: aBlock

	position addObserver: aBlock
! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 16:06:12' prior: 50635841!
addPositionChangeHandler: aBlock

	position addObserver: aBlock
! !
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 16:06:17' prior: 50637732!
addHeadingChangeHandler: aBlock

	head addObserver: aBlock
! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 16:06:27' prior: 50635785!
moveBackward
	
	head moveBackward! !
!MarsRover methodsFor: 'moving' stamp: 'TS 6/4/2023 16:06:31' prior: 50635780!
moveForward
	
	head moveForward! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:06:36' prior: 50635767!
rotateRight
	
	head rotateRight! !
!MarsRover methodsFor: 'heading' stamp: 'TS 6/4/2023 16:06:40' prior: 50635762!
rotateLeft
	
	head rotateLeft! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 16:06:42'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 16:06:42'!
PASSED!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 16:07:05'!
addHeadingChangeObserver: aBlock

	head addObserver: aBlock
! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:07:05' prior: 50637389!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingChangeObserver: [:newHeading |
		self logHeadingChange: newHeading
	]! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:07:05' prior: 50637382!
showHeadingOf: aMarsRover

	aMarsRover addHeadingChangeObserver: [:newHeading |
		self updateHeading: newHeading
	]! !

!methodRemoval: MarsRover #addHeadingChangeHandler: stamp: 'TS 6/4/2023 16:07:05'!
addHeadingChangeHandler: aBlock

	head addObserver: aBlock
!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 16:07:11'!
addHeadingObserver: aBlock

	head addObserver: aBlock
! !

!methodRemoval: MarsRover #addHeadingChangeObserver: stamp: 'TS 6/4/2023 16:07:11'!
addHeadingChangeObserver: aBlock

	head addObserver: aBlock
!
!MarsRover methodsFor: 'logging' stamp: 'TS 6/4/2023 16:07:18'!
addPositionObserver: aBlock

	position addObserver: aBlock
! !

!methodRemoval: MarsRover #addPositionChangeHandler: stamp: 'TS 6/4/2023 16:07:18'!
addPositionChangeHandler: aBlock

	position addObserver: aBlock
!

!classRemoval: #LazyInitProxy stamp: 'TS 6/4/2023 16:07:29'!
ProtoObject subclass: #LazyInitProxy
	instanceVariableNames: 'initClosure value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!classRemoval: #Provider stamp: 'TS 6/4/2023 16:07:29'!
Object subclass: #Provider
	instanceVariableNames: 'phones adresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!classRemoval: #PhoneBook stamp: 'TS 6/4/2023 16:07:29'!
Object subclass: #PhoneBook
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!classRemoval: #AddressBook stamp: 'TS 6/4/2023 16:07:29'!
Object subclass: #AddressBook
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:07:48'!
ERROR!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:07:48'!
ERROR!
!MonitoringWindow methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 16:07:54' prior: 50637897!
showHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self updateHeading: newHeading
	]! !
!MonitoringWindow methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 16:08:05' prior: 50636466!
showPositionOf: aMarsRover 

	aMarsRover addPositionObserver: [:newPosition |
		self updatePosition: newPosition
	].! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:08:06'!
ERROR!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:08:06'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:08:06'!
PASSED!
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 16:08:12' prior: 50637890!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self logHeadingChange: newHeading
	]! !
!Logger methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 16:08:16' prior: 50637396!
trackPositionOf: aMarsRover

	aMarsRover addPositionObserver: [:newPosition |
		self logPositionChange: newPosition
	]! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:08:17'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:08:58'!
PASSED!

----End fileIn of /home/sponja/Downloads/DesignPatterns-Adapter.st----!

!classRemoval: #PluggableAdapter stamp: 'TS 6/4/2023 16:15:19'!
ProtoObject subclass: #PluggableAdapter
	instanceVariableNames: 'closureBySelectors'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Adapter'!

!classRemoval: #EntryField stamp: 'TS 6/4/2023 16:15:19'!
Object subclass: #EntryField
	instanceVariableNames: 'model'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Adapter'!

!classRemoval: #CustomerToDrawableAdapter stamp: 'TS 6/4/2023 16:15:19'!
Object subclass: #CustomerToDrawableAdapter
	instanceVariableNames: 'adaptee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Adapter'!

!classRemoval: #Customer stamp: 'TS 6/4/2023 16:15:19'!
Object subclass: #Customer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Adapter'!

!classRemoval: #Canvas stamp: 'TS 6/4/2023 16:15:19'!
Object subclass: #Canvas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Adapter'!

!classRemoval: #AdapterExamples stamp: 'TS 6/4/2023 16:15:20'!
Object subclass: #AdapterExamples
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Adapter'!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 16:16:26' prior: 50635705!
updateHeading: aHeading

	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [ headingField := 'Apuntando al Norte' ].	
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [ headingField := 'Apuntando al Oeste' ].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [ headingField := 'Apuntando al Sur' ].
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [ headingField := 'Apuntando al Este' ].
! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:16:38' prior: 50637267!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fl'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: 'Apuntando al Oeste'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:16:43' prior: 50637279!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Sur'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:16:46' prior: 50637291!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Norte'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:16:52' prior: 50637303!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatWindow: [:marsRover | MonitoringWindow showingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Oeste'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:16:59' prior: 50637326!
test16LoggerCanTrackOnlyHeadingChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingHeadingOf: marsRover ]
		hasLines: {
			'Apuntando al Oeste'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:17:04' prior: 50637346!
test18WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow showingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Oeste'! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:07'!
FAILURE!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:17:07'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:07'!
FAILURE!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:13'!
FAILURE!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:17:13'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:13'!
FAILURE!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:17:22' prior: 50638599!
test16LoggerCanTrackOnlyHeadingChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingHeadingOf: marsRover ]
		hasLines: {
			'West'
		}! !

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:17:23'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:17:26'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:17:27'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:17:27'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:17:27'!
PASSED!
!MarsRoverHeadingEast methodsFor: 'nil' stamp: 'TS 6/4/2023 16:18:46'!
monitoringWindowFieldName

	^ 'Este'! !
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'TS 6/4/2023 16:19:11'!
monitoringWindowFieldName

	^ 'Norte'! !
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'TS 6/4/2023 16:19:14'!
monitoringWindowFieldName

	^ 'Este'! !
!MarsRoverHeading methodsFor: 'printing' stamp: 'TS 6/4/2023 16:19:45'!
monitoringWindowFieldName

	^ 'Este'! !

!methodRemoval: MarsRoverHeadingSouth #monitoringWindowFieldName stamp: 'TS 6/4/2023 16:19:45'!
monitoringWindowFieldName

	^ 'Este'!
!MarsRoverHeading methodsFor: 'printing' stamp: 'TS 6/4/2023 16:20:05' prior: 50638930!
monitoringWindowFieldName

	self subclassResponsibility! !
!MarsRoverHeadingSouth methodsFor: 'printing' stamp: 'TS 6/4/2023 16:20:14' overrides: 50638939!
monitoringWindowFieldName

	^ 'Sur'! !
!MarsRoverHeadingWest methodsFor: 'nil' stamp: 'TS 6/4/2023 16:20:19' overrides: 50638939!
monitoringWindowFieldName

	^ 'Oeste'! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:20:31'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:20:31'!
PASSED!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 16:20:56' prior: 50638531!
updateHeading: aHeading

	headingField := 'Apuntando al ', aHeading monitoringWindowFieldName ! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 16:20:56' prior: 50639023!
updateHeading: aHeading

	headingField := 'Apuntando al ', aHeading monitoringWindowFieldName! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:20:57'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:20:57'!
PASSED!
!MarsRoverHeadingEast methodsFor: 'printing' stamp: 'TS 6/4/2023 16:21:33'!
loggerLine

	^ 'East'! !
!MarsRoverHeadingNorth methodsFor: 'printing' stamp: 'TS 6/4/2023 16:21:39'!
loggerLine

	^ 'North'! !
!MarsRoverHeadingSouth methodsFor: 'printing' stamp: 'TS 6/4/2023 16:21:46'!
loggerLine

	^ 'South'! !
!MarsRoverHeadingWest methodsFor: 'printing' stamp: 'TS 6/4/2023 16:21:52'!
loggerLine

	^ 'West'! !
!Logger methodsFor: 'logging' stamp: 'TS 6/4/2023 16:22:17' prior: 50628310!
logHeadingChange: aNewHeading

	self addLine: aNewHeading loggerLine! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:22:19'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:22:19'!
PASSED!
!MarsRoverHeading methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:22:59'!
accept: aVisitor

	self subclassResponsibility! !
!MarsRoverHeadingEast methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:08' overrides: 50639194!
accept: aVisitor

	self subclassResponsibility! !
!MarsRoverHeadingNorth methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:08' overrides: 50639194!
accept: aVisitor

	self subclassResponsibility! !
!MarsRoverHeadingSouth methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:08' overrides: 50639194!
accept: aVisitor

	self subclassResponsibility! !
!MarsRoverHeadingWest methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:08' overrides: 50639194!
accept: aVisitor

	self subclassResponsibility! !

!methodRemoval: MarsRoverHeading #accept: stamp: 'TS 6/4/2023 16:23:08'!
accept: aVisitor

	self subclassResponsibility!
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:23:08'!
accept: aVisitor

	self subclassResponsibility! !

!methodRemoval: MarsRoverHeading #monitoringWindowFieldName stamp: 'TS 6/4/2023 16:23:28'!
monitoringWindowFieldName

	self subclassResponsibility!
!MarsRoverHeadingEast methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:43' prior: 50639199 overrides: 50639222!
accept: aVisitor

	aVisitor visitHeadingEast: self! !
!MarsRoverHeadingNorth methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:52' prior: 50639204 overrides: 50639222!
accept: aVisitor

	aVisitor visitHeadingNorth: self! !
!MarsRoverHeadingSouth methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:23:58' prior: 50639209 overrides: 50639222!
accept: aVisitor

	aVisitor visitHeadingSouth: self! !
!MarsRoverHeadingWest methodsFor: 'visiting' stamp: 'TS 6/4/2023 16:24:05' prior: 50639214 overrides: 50639222!
accept: aVisitor

	aVisitor visitHeadingWest: self! !
!Logger methodsFor: 'nil' stamp: 'TS 6/4/2023 16:24:31'!
visitHeadingEast: aHeading

	self addLine: 'East'! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:24:38'!
visitHeadingWest: aHeading

	self addLine: 'West'! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:24:45'!
visitHeadingNorth: aHeading

	self addLine: 'North'! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:24:53'!
visitHeadingSouth: aHeading

	self addLine: 'South'! !

!methodRemoval: MarsRoverHeadingEast #loggerLine stamp: 'TS 6/4/2023 16:25:07'!
loggerLine

	^ 'East'!
!Logger methodsFor: 'logging' stamp: 'TS 6/4/2023 16:25:24' prior: 50639120!
logHeadingChange: aNewHeading

	aNewHeading accept: self! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:25:29'!
PASSED!

!methodRemoval: MarsRoverHeadingNorth #loggerLine stamp: 'TS 6/4/2023 16:25:35'!
loggerLine

	^ 'North'!

!methodRemoval: MarsRoverHeadingSouth #loggerLine stamp: 'TS 6/4/2023 16:25:36'!
loggerLine

	^ 'South'!

!methodRemoval: MarsRoverHeadingWest #loggerLine stamp: 'TS 6/4/2023 16:25:38'!
loggerLine

	^ 'West'!
!MonitoringWindow methodsFor: 'nil' stamp: 'TS 6/4/2023 16:26:06'!
visitHeadingEast: aHeading

	headingField := 'Apuntando al Este'! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:26:13'!
visitHeadingWest: aHeading

	headingField := 'Apuntando al Oeste'! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:26:18'!
visitHeadingNorth: aHeading

	headingField := 'Apuntando al Norte'! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 16:26:24'!
visitHeadingSouth: aHeading

	headingField := 'Apuntando al Sur'! !
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 16:26:42' prior: 50639029!
updateHeading: aHeading

	aHeading accept: self! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:26:44'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:26:44'!
PASSED!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:33:07'!
test19CanUseBothLoggerAndWindowAtTheSameTime
	"
	Este test no fue parte del TDD: lo armamos al final (y corrió de una) porque se nos olvidó.
	"

	| logger marsRover window |
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger trackingPositionAndHeadingOf: marsRover.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: { 1@2. 'West' } equals: logger lines.
	self assert: 1@2 equals: window positionField.
	self assert: 'Apuntando al Oeste' equals: window headingField.! !

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 16:33:11'!
FAILURE!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 16:33:19' prior: 50639451!
test19CanUseBothLoggerAndWindowAtTheSameTime
	"
	Este test no fue parte del TDD: lo armamos al final (y corrió de una) porque se nos olvidó.
	"

	| logger marsRover window |
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger trackingPositionAndHeadingOf: marsRover.
	window := MonitoringWindow showingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: { 1@2. 'West' } asOrderedCollection equals: logger lines.
	self assert: 1@2 equals: window positionField.
	self assert: 'Apuntando al Oeste' equals: window headingField.! !

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 16:33:20'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 16:33:20'!
PASSED!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 17:22:37'!
trackingHeadingOf: aMarsRover 

	| window |
	window := self new.
	
	window showHeadingOf: aMarsRover.
	
	^ window! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:37' prior: 50638609!
test18WindowCanTrackOnlyHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow trackingHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Oeste'! !

!methodRemoval: MonitoringWindow class #showingHeadingOf: stamp: 'TS 6/4/2023 17:22:37'!
showingHeadingOf: aMarsRover 

	| window |
	window := self new.
	
	window showHeadingOf: aMarsRover.
	
	^ window!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 17:22:46'!
trackingPositionOf: aMarsRover 

	| window |
	window := self new.
	
	window showPositionOf: aMarsRover.
	
	^ window! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:46' prior: 50637367!
test17WindowCanTrackOnlyPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionOf: marsRover ]
		hasPositionField: 1@3 andHeadingField: nil! !

!methodRemoval: MonitoringWindow class #showingPositionOf: stamp: 'TS 6/4/2023 17:22:46'!
showingPositionOf: aMarsRover 

	| window |
	window := self new.
	
	window showPositionOf: aMarsRover.
	
	^ window!
!MonitoringWindow class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 17:22:52'!
trackingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window showPositionOf: aMarsRover.	
	window showHeadingOf: aMarsRover.
	
	^ window! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50637255!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: nil! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50638573!
test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'llll'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Norte'! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50637231!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: nil! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50639475!
test19CanUseBothLoggerAndWindowAtTheSameTime
	"
	Este test no fue parte del TDD: lo armamos al final (y corrió de una) porque se nos olvidó.
	"

	| logger marsRover window |
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger trackingPositionAndHeadingOf: marsRover.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: { 1@2. 'West' } asOrderedCollection equals: logger lines.
	self assert: 1@2 equals: window positionField.
	self assert: 'Apuntando al Oeste' equals: window headingField.! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50637243!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@3 andHeadingField: nil! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50638586!
test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'rrr'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Oeste'! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50638547!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fl'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: 1@2 andHeadingField: 'Apuntando al Oeste'! !
!LoggingTest methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:22:52' prior: 50638560!
test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'll'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: nil andHeadingField: 'Apuntando al Sur'! !

!methodRemoval: MonitoringWindow class #showingPositionAndHeadingOf: stamp: 'TS 6/4/2023 17:22:52'!
showingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window showPositionOf: aMarsRover.	
	window showHeadingOf: aMarsRover.
	
	^ window!
!MonitoringWindow methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 17:23:07'!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self updateHeading: newHeading
	]! !
!MonitoringWindow class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:23:07' prior: 50639621!
trackingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window showPositionOf: aMarsRover.	
	window trackHeadingOf: aMarsRover.
	
	^ window! !
!MonitoringWindow class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:23:07' prior: 50639572!
trackingHeadingOf: aMarsRover 

	| window |
	window := self new.
	
	window trackHeadingOf: aMarsRover.
	
	^ window! !

!methodRemoval: MonitoringWindow #showHeadingOf: stamp: 'TS 6/4/2023 17:23:07'!
showHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self updateHeading: newHeading
	]!
!MonitoringWindow methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 17:23:15'!
trackPositionOf: aMarsRover 

	aMarsRover addPositionObserver: [:newPosition |
		self updatePosition: newPosition
	].! !
!MonitoringWindow class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:23:15' prior: 50639597!
trackingPositionOf: aMarsRover 

	| window |
	window := self new.
	
	window trackPositionOf: aMarsRover.
	
	^ window! !
!MonitoringWindow class methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:23:15' prior: 50639756!
trackingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window trackPositionOf: aMarsRover.	
	window trackHeadingOf: aMarsRover.
	
	^ window! !

!methodRemoval: MonitoringWindow #showPositionOf: stamp: 'TS 6/4/2023 17:23:15'!
showPositionOf: aMarsRover 

	aMarsRover addPositionObserver: [:newPosition |
		self updatePosition: newPosition
	].!
!Logger methodsFor: 'logging' stamp: 'TS 6/4/2023 17:23:52'!
headingUpdate: aNewHeading

	aNewHeading accept: self! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:23:52' prior: 50638105!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self headingUpdate: newHeading
	]! !

!methodRemoval: Logger #logHeadingChange: stamp: 'TS 6/4/2023 17:23:52'!
logHeadingChange: aNewHeading

	aNewHeading accept: self!
!Logger methodsFor: 'logging' stamp: 'TS 6/4/2023 17:23:56' prior: 50639808!
headingUpdate: aHeading

	aHeading accept: self! !
!Logger methodsFor: 'logging' stamp: 'TS 6/4/2023 17:24:04'!
positionUpdate: aPosition 

	self addLine: aPosition! !
!Logger methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:24:04' prior: 50638112!
trackPositionOf: aMarsRover

	aMarsRover addPositionObserver: [:newPosition |
		self positionUpdate: newPosition
	]! !

!methodRemoval: Logger #logPositionChange: stamp: 'TS 6/4/2023 17:24:04'!
logPositionChange: aPosition 

	self addLine: aPosition!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 17:24:21'!
headingUpdate: aHeading

	aHeading accept: self! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:24:21' prior: 50639749!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self headingUpdate: newHeading
	]! !

!methodRemoval: MonitoringWindow #updateHeading: stamp: 'TS 6/4/2023 17:24:21'!
updateHeading: aHeading

	aHeading accept: self!
!MonitoringWindow methodsFor: 'logging' stamp: 'TS 6/4/2023 17:24:30'!
positionUpdate: aPosition 

	positionField := aPosition! !
!MonitoringWindow methodsFor: 'as yet unclassified' stamp: 'TS 6/4/2023 17:24:30' prior: 50639778!
trackPositionOf: aMarsRover 

	aMarsRover addPositionObserver: [:newPosition |
		self positionUpdate: newPosition
	].! !

!methodRemoval: MonitoringWindow #updatePosition: stamp: 'TS 6/4/2023 17:24:30'!
updatePosition: aPosition 

	positionField := aPosition!

!classDefinition: #MarsRoverStateTracker category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 17:25:24'!
Object subclass: #MarsRoverStateTracker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MonitoringWindow category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 17:25:24'!
MarsRoverStateTracker subclass: #MonitoringWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverStateTracker subclass: #Logger
	instanceVariableNames: 'lines marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 17:25:36'!
MarsRoverStateTracker subclass: #Logger
	instanceVariableNames: 'lines marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverStateTracker subclass: #Logger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 17:25:44'!
MarsRoverStateTracker subclass: #Logger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 17:25:47'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 17:25:49'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 17:25:49'!
PASSED!
!MarsRoverStateTracker methodsFor: 'no messages' stamp: 'TS 6/4/2023 17:26:07'!
headingUpdate: aHeading

	self subclassResponsibility! !
!MarsRoverStateTracker methodsFor: 'tracking' stamp: 'TS 6/4/2023 17:26:30'!
positionUpdate: aPosition

	self subclassResponsibility! !
!MarsRoverStateTracker methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 17:27:25'!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self headingUpdate: newHeading
	]! !

!methodRemoval: MonitoringWindow #trackHeadingOf: stamp: 'TS 6/4/2023 17:27:25'!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self headingUpdate: newHeading
	]!

!methodRemoval: Logger #trackHeadingOf: stamp: 'TS 6/4/2023 17:27:25'!
trackHeadingOf: aMarsRover

	aMarsRover addHeadingObserver: [:newHeading |
		self headingUpdate: newHeading
	]!
!MarsRoverStateTracker methodsFor: 'initialization - private' stamp: 'TS 6/4/2023 17:27:30'!
trackPositionOf: aMarsRover 

	aMarsRover addPositionObserver: [:newPosition |
		self positionUpdate: newPosition
	].! !

!methodRemoval: MonitoringWindow #trackPositionOf: stamp: 'TS 6/4/2023 17:27:30'!
trackPositionOf: aMarsRover 

	aMarsRover addPositionObserver: [:newPosition |
		self positionUpdate: newPosition
	].!

!methodRemoval: Logger #trackPositionOf: stamp: 'TS 6/4/2023 17:27:30'!
trackPositionOf: aMarsRover

	aMarsRover addPositionObserver: [:newPosition |
		self positionUpdate: newPosition
	]!
!MarsRoverStateTracker class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 17:27:52'!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new.
	
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !

!methodRemoval: Logger class #trackingHeadingOf: stamp: 'TS 6/4/2023 17:27:52'!
trackingHeadingOf: aMarsRover 

	| logger |
	logger := self new.
	
	logger trackHeadingOf: aMarsRover.
	
	^ logger!

!methodRemoval: MonitoringWindow class #trackingHeadingOf: stamp: 'TS 6/4/2023 17:27:52'!
trackingHeadingOf: aMarsRover 

	| window |
	window := self new.
	
	window trackHeadingOf: aMarsRover.
	
	^ window!
!MarsRoverStateTracker class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 17:28:00'!
trackingPositionAndHeadingOf: aMarsRover

	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.
	logger trackHeadingOf: aMarsRover.
	
	^ logger! !

!methodRemoval: Logger class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 17:28:00'!
trackingPositionAndHeadingOf: aMarsRover

	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.
	logger trackHeadingOf: aMarsRover.
	
	^ logger!

!methodRemoval: MonitoringWindow class #trackingPositionAndHeadingOf: stamp: 'TS 6/4/2023 17:28:00'!
trackingPositionAndHeadingOf: aMarsRover 

	| window |
	window := self new.

	window trackPositionOf: aMarsRover.	
	window trackHeadingOf: aMarsRover.
	
	^ window!
!MarsRoverStateTracker class methodsFor: 'instance creation' stamp: 'TS 6/4/2023 17:28:04'!
trackingPositionOf: aMarsRover 
	
	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.

	^ logger! !

!methodRemoval: Logger class #trackingPositionOf: stamp: 'TS 6/4/2023 17:28:04'!
trackingPositionOf: aMarsRover 
	
	| logger |
	logger := self new.
	
	logger trackPositionOf: aMarsRover.

	^ logger!

!methodRemoval: MonitoringWindow class #trackingPositionOf: stamp: 'TS 6/4/2023 17:28:04'!
trackingPositionOf: aMarsRover 

	| window |
	window := self new.
	
	window trackPositionOf: aMarsRover.
	
	^ window!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:28:10'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 17:28:11'!
PASSED!

----SNAPSHOT----(4 June 2023 17:28:27) CuisUniversity-5832.image priorSource: 9785842!

!methodRemoval: MarsRover #updateLogWithNewHeading stamp: 'TS 6/4/2023 17:28:49'!
updateLogWithNewHeading

	headingChangeHandlers do: [:aBlock | aBlock value: head ]!

!methodRemoval: MarsRover #updateLogWithNewPosition stamp: 'TS 6/4/2023 17:28:50'!
updateLogWithNewPosition

	positionChangeHandlers do: [:aBlock | aBlock value: position ]!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 17:28:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head headingChangeHandlers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'TS 6/4/2023 17:28:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:28:58'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 17:28:59'!
PASSED!

----SNAPSHOT----(4 June 2023 17:32:38) CuisUniversity-5832.image priorSource: 9880235!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:32:49' prior: 50637161!
test01LogOfMarsRoverThatMovedForwardContainsNewPosition

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'1@2'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:32:57' prior: 50637183!
test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'1@2'.
			'1@3'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:33:04' prior: 50637172!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'1@2'.
			'1@3'.
			1@2
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:00' prior: 50640661!
test03LogOfMarsRoverThatMovesBackwardsContainsPositions

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatLogger: [:marsRover | Logger trackingPositionAndHeadingOf: marsRover ]
		hasLines: {
			'1@2'.
			'1@3'.
			'1@2'
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:14' prior: 50639656!
test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'f'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: '1@2' andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:21' prior: 50639689!
test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ff'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: '1@3' andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:25' prior: 50639630!
test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffb'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: '1@2' andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:30' prior: 50639715!
test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'fl'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionAndHeadingOf: marsRover ]
		hasPositionField: '1@2' andHeadingField: 'Apuntando al Oeste'! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:39' prior: 50637316!
test15LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			'1@2'.
			1@3
		}! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:45' prior: 50639604!
test17WindowCanTrackOnlyPosition

	self 
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatWindow: [:marsRover | MonitoringWindow trackingPositionOf: marsRover ]
		hasPositionField: '1@3' andHeadingField: nil! !
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:35:55' prior: 50639668!
test19CanUseBothLoggerAndWindowAtTheSameTime
	"
	Este test no fue parte del TDD: lo armamos al final (y corrió de una) porque se nos olvidó.
	"

	| logger marsRover window |
	marsRover := MarsRover at: 1@1 heading: self north.
	logger := Logger trackingPositionAndHeadingOf: marsRover.
	window := MonitoringWindow trackingPositionAndHeadingOf: marsRover.
	
	marsRover process: 'fl'.
	
	self assert: { '1@2'. 'West' } asOrderedCollection equals: logger lines.
	self assert: '1@2' equals: window positionField.
	self assert: 'Apuntando al Oeste' equals: window headingField.! !
!Logger methodsFor: 'tracking' stamp: 'TS 6/4/2023 17:36:09' prior: 50639828 overrides: 50640102!
positionUpdate: aPosition 

	self addLine: aPosition asString! !
!MonitoringWindow methodsFor: 'tracking' stamp: 'TS 6/4/2023 17:36:18' prior: 50639859 overrides: 50640102!
positionUpdate: aPosition 

	positionField := aPosition asString! !

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:36:21'!
FAILURE!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:36:21'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:36:21'!
FAILURE!
!LoggingTest methodsFor: 'tests' stamp: 'TS 6/4/2023 17:36:34' prior: 50640732!
test15LoggerCanTrackOnlyPositionChanges

	self
		withRoverStartingAt: 1@1
		heading: self north
		andCommandString: 'ffl'
		assertThatLogger: [:marsRover | Logger trackingPositionOf: marsRover ]
		hasLines: {
			'1@2'.
			'1@3'
		}! !

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:36:35'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:36:36'!
PASSED!

!testRun: #LoggingTest #test01LogOfMarsRoverThatMovedForwardContainsNewPosition stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test02LogOfMarsRoverThatMovedForwardTwiceContainsBothPositions stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test03LogOfMarsRoverThatMovesBackwardsContainsPositions stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test04LogOfMarsRoverThatRotatesLeftContainsNewHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test05LogOfMarsRoverThatRotatesLeftTwiceContainsBothNewHeadings stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test06LogOfMarsRoverThatDoesAFullTurnContainsAllNewHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test07LogOfMarsRoverThatRotatesRightMultipleTimesContainsAllNewHeadings stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test08MonitoringWindowOfMarsRoverAfterMovingForwardShowsNewPosition stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test09MonitoringWindowOfMarsRoverAfterMovingForwardTwiceShowsLastPosition stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test10MonitoringWindowOfMarsRoverAfterMovingBackwardsShowsLastPosition stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test11MonitoringWindowOfMarsRoverAfterRotatingLeftShowsNewHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test12MonitoringWindowOfMarsRoverAfterRotatingLeftTwiceShowsLastHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test13MonitoringWindowOfMarsRoverAfterDoingAFullTurnShowsLastHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test14MonitoringWindowOfMarsRoverAfterRotatingRightMultipleTimesShowsLastHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test15LoggerCanTrackOnlyPositionChanges stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test16LoggerCanTrackOnlyHeadingChanges stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test17WindowCanTrackOnlyPosition stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test18WindowCanTrackOnlyHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #LoggingTest #test19CanUseBothLoggerAndWindowAtTheSameTime stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test01DoesNotMoveWhenNoCommand stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test02IsAtFailsForDifferentPosition stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test03IsAtFailsForDifferentHeading stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test09DoesNotProcessInvalidCommand stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test10CanProcessMoreThanOneCommand stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

!testRun: #MovementTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'TS 6/4/2023 17:36:38'!
PASSED!

----QUIT----(4 June 2023 17:36:58) CuisUniversity-5832.image priorSource: 9887540!